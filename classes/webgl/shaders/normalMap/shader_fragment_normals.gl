precision highp float;

uniform sampler2D sampler;
uniform vec2 wh, size;
uniform float H;
varying vec2 fragPos;

vec3 getPoint(float x, float y, vec2 uv, float dPx, float dPy){
    vec4 t = texture2D(sampler, uv+vec2(x*dPx,y*dPy));
    return vec3(x*dPx*size.x,y*dPy*size.y,H*t.x);
}

void main(void) {
    float dPx=1./(wh.x);
    float dPy=1./(wh.y);
    vec2 uv=fragPos+vec2(.5, .5);
    vec4 color=texture2D(sampler, uv);

    //vec3 origin=vec3(0.,0.,color.r*H);
    vec3 origin=getPoint(0.,0., uv, dPx, dPy);

    vec3 points[4];
    points[0]=getPoint(-1.,0., uv, dPx, dPy);
    points[1]=getPoint(0.,-1., uv, dPx, dPy);
    points[2]=getPoint(1. ,0., uv, dPx, dPy);
    points[3]=getPoint(0. ,1., uv, dPx, dPy);

    vec3 normal=normalize(cross(points[1]-points[3], points[2]-points[0]));

    normal.xy=vec2(0.5,0.5)+normal.xy*0.5;

    //normal= texture2D(sampler, uv).rgb;
    //normal=vec3(1.,0.,0.);
    //normal=vec3(0.5,0.5,1.);
    gl_FragColor=vec4(color.r, normal);
    //gl_FragColor=vec4(normal, 1.);

}