attribute vec2 position;

uniform mat4 matrice_vue, matrice_projection, matrice_objet;
uniform float hMax, fogDmin, fogDmax;
uniform vec2 scale, centre;
uniform sampler2D samplerHeightMap;


varying float vFog, vHeight;
varying vec2 vUV;
varying vec3 vNormal;

void main(void) {
    vec2 pos2=position*scale+centre;
    vec3 pos=vec3(pos2.xy,0.);

    vec4 hmColor=texture2D(samplerHeightMap, position);
    pos.z+=hmColor.r*hMax;

    vec4 posScene=matrice_vue * matrice_objet * vec4(pos, 1.0);
    gl_Position = matrice_projection * posScene;    

    vUV = position;
    vNormal=normalize(hmColor.gba-vec3(0.5,0.5,0.));
    //vNormal=vec3(0.,0.,1.);
    vFog =  1.-smoothstep(fogDmin, fogDmax, length(posScene.xyz));
    vHeight = smoothstep(0.2, 0.5, pos.z);
}