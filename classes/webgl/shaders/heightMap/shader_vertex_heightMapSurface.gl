attribute vec2 position;

uniform mat4 matrice_vue, matrice_projection, matrice_objet;
uniform float hMax, hMaxIsland;
uniform vec2 scale, centre, scaleUV, scaleIsland, offsetIsland;
uniform sampler2D samplerHeightMap, samplerIsland;

varying vec2 vUV;
varying vec3 vNormal;

void main(void) {
    vec2 pos2=position*scale+centre;
    vec3 pos=vec3(pos2.x,pos2.y,0.);
    vec4 hmColor=texture2D(samplerHeightMap, position);
    pos.z+=hmColor.r*hMax;

    vec4 islandHM=texture2D(samplerIsland, position*scaleIsland+offsetIsland);
    pos.z+=islandHM.r*hMaxIsland;

    gl_Position = matrice_projection * matrice_vue * matrice_objet * vec4(pos, 1.0);    
    vUV = position*scaleUV;
    vNormal=hmColor.gba+islandHM.bga+vec3(-1.,-1.,0.);
}