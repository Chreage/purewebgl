var SETTINGS={debug:{LsystemHeightMap:false,LsystemNormalMap:false,islandHeightMap:false,islandNormalMap:false,hideSpheres:true,ErodeTexture:false,noErosionLsystems:true,},navigation:{mouse_sensibility_x:0.0007,mouse_sensibility_y:0.0005,keyboard_sensibility:0.9,wheel_sensibility:-0.5,mouse_amortization:0.85},camera:{position0:[0,0,-50],phi0:0,theta0:-Math.PI/6,zNear:2,zFar:300,viewAngle:45},physics:{dt:16},culling:{NSpheres:2000,NSpheresTextured:400,weightAlphaTol:20,weightGCTol:100,weightNodeIncrease:1.1,maxImageReqs:30},Lsystems:{number:5,rank:15,showGenDt:800,scaleAdjust:0.8,scaleBranch:6,angle:Math.PI/5,heightmapSizePx:1024,heightmapMargin:4,hMax:3,heightMapGaussPatchSizePx:512,heightMapPatchSizePx:70,heightMapPatchAlphaMin:0.1,heightMapPatchAlphaRandom:0.1,heightMapPatchMaxGen:8,defaultTextureImageURL:"images/textures/pixelBlack.jpg",textureColorURL:"images/textures/sand.png",textureNormalsURL:"images/textures/sand_normal.png",textureTileInWidth:10,gridDistanceLodMin:300,erodeTexturesURL:["images/textures/erosion/grandcan2.jpg"],riversRefreshDistance:80},islands:{sizePx:1024,size:180,hMax:16,nPatch:300,patchSizeAvgPx:600,patchSizeRandomPx:400,patchGaussSizePx:512,patchAlphaAvg:0.005,patchAlphaRandom:0.005,patchDistanceMaxRandom:10,textureColorURL:"images/textures/sand.png",textureNormalsURL:"images/textures/sand_normal.png",textureTileInWidth:100,vtOffset:0.001,collisionRadius:45,collisionRadiusMargin:40,centerExclusionRadius:60,patchExclusionRadius:10,mountainTexturesURL:["images/textures/erosion/mountain1024.png"],gridDistanceLodMin:400,hideDistance:500,riversRefreshDistance:150},sphere:{zOffset:1,nBands:24,nCrowns:24,nLods:4,changeLodDWeight:10,lodMinWeight:-200,lodMaxWeight:-50},grids:{LOD0Size:512,nLods:6},water:{enable:true,sky:"images/textures/water/ciel_white.jpg",ground:"images/textures/water/sand2.jpg",refractionIndice:1.5,depth:3,gridSize:512,dimension:800,curve:5,color:[0.2,0.5,0.9,1],visibility:3.5,center:[0,0,0.2],speed:0.04},light:{skyColor:[1,1,1],direction:[0,0.5,0.7]},fog:{dMin:70,dMax:250,color:[1,1,1]}};var lib_matrix4={get_I4:function(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},set_I4:function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1},copyNew:function(a){return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},};var lib_matrix_projection={get:function(g,c,f,e){var d=Math.tan(lib_maths.degToRad(0.5*g)),b=-(e+f)/(e-f),h=(-2*e*f)/(e-f);return[0.5/d,0,0,0,0,0.5*c/d,0,0,0,0,b,-1,0,0,h,0]},};var lib_matrix_rot4={rotateX:function(a,f){var h=Math.cos(f);var d=Math.sin(f);var b=a[1],g=a[5],e=a[9];a[1]=a[1]*h-a[2]*d;a[5]=a[5]*h-a[6]*d;a[9]=a[9]*h-a[10]*d;a[2]=a[2]*h+b*d;a[6]=a[6]*h+g*d;a[10]=a[10]*h+e*d},rotateY:function(b,f){var h=Math.cos(f);var e=Math.sin(f);var d=b[0],a=b[4],g=b[8];b[0]=h*b[0]+e*b[2];b[4]=h*b[4]+e*b[6];b[8]=h*b[8]+e*b[10];b[2]=h*b[2]-e*d;b[6]=h*b[6]-e*a;b[10]=h*b[10]-e*g},rotateZ:function(b,f){var h=Math.cos(f);var e=Math.sin(f);var d=b[0],a=b[4],g=b[8];b[0]=h*b[0]-e*b[1];b[4]=h*b[4]-e*b[5];b[8]=h*b[8]-e*b[9];b[1]=h*b[1]+e*d;b[5]=h*b[5]+e*a;b[9]=h*b[9]+e*g}};var lib_matrix_mv={translateRot:function(a,b){a[12]+=b[0]*a[0]+b[1]*a[4]+b[2]*a[8];a[13]+=b[0]*a[1]+b[1]*a[5]+b[2]*a[9];a[14]+=b[0]*a[2]+b[1]*a[6]+b[2]*a[10]},do_inv_rot:function(b,c){var a=c[0],d=c[1];c[0]=a*b[0]+d*b[1]+c[2]*b[2];c[1]=a*b[4]+d*b[5]+c[2]*b[6];c[2]=a*b[8]+d*b[9]+c[2]*b[10]},do_inv_rotNew:function(a,b){return[b[0]*a[0]+b[1]*a[1]+b[2]*a[2],b[0]*a[4]+b[1]*a[5]+b[2]*a[6],b[0]*a[8]+b[1]*a[9]+b[2]*a[10]]},do_inv_mvNew:function(a,b){return[a[0]*b[0]+a[1]*b[1]+a[2]*b[2]-a[12]*a[0]-a[13]*a[1]-a[14]*a[2],a[4]*b[0]+a[5]*b[1]+a[6]*b[2]-a[12]*a[4]-a[13]*a[5]-a[14]*a[6],a[8]*b[0]+a[9]*b[1]+a[10]*b[2]-a[12]*a[8]-a[13]*a[9]-a[14]*a[10]]},set_position:function(a,b){a[12]=b[0];a[13]=b[1];a[14]=b[2]},inv:function(a,b){b[0]=a[0];b[1]=a[4];b[2]=a[8];b[4]=a[1];b[5]=a[5];b[6]=a[9];b[8]=a[2];b[9]=a[6];b[10]=a[10];b[12]=-a[0]*a[12]-a[1]*a[13]-a[2]*a[14];b[13]=-a[4]*a[12]-a[5]*a[13]-a[6]*a[14];b[14]=-a[8]*a[12]-a[9]*a[13]-a[10]*a[14]}};var lib_vector={size:function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2])},distance:function(a,b){return Math.sqrt((a[0]-b[0])*(a[0]-b[0])+(a[1]-b[1])*(a[1]-b[1])+(a[2]-b[2])*(a[2]-b[2]))},distanceDim2:function(a,b){return Math.sqrt((a[0]-b[0])*(a[0]-b[0])+(a[1]-b[1])*(a[1]-b[1]))},distanceMinus:function(a,b){return Math.sqrt((a[0]+b[0])*(a[0]+b[0])+(a[1]+b[1])*(a[1]+b[1])+(a[2]+b[2])*(a[2]+b[2]))},distance2:function(a,b){return(a[0]-b[0])*(a[0]-b[0])+(a[1]-b[1])*(a[1]-b[1])+(a[2]-b[2])*(a[2]-b[2])},size2:function(a){return a[0]*a[0]+a[1]*a[1]+a[2]*a[2]},add:function(b,a){b[0]+=a[0];b[1]+=a[1];b[2]+=a[2]},normalize:function(a){var b=this.size(a);a[0]/=b;a[1]/=b;a[2]/=b},prodVect:function(b,a){return[b[1]*a[2]-a[1]*b[2],b[2]*a[0]-b[0]*a[2],b[0]*a[1]-b[1]*a[0]]},to_spherical:function(a){var d=this.size(a);var c=Math.acos(a[2]/d);var e=Math.acos(a[1]/Math.sqrt(a[0]*a[0]+a[1]*a[1]));var b=(a[0]>=0)?e:2*Math.PI-e;return[d,b,c]},dot:function(b,a){return b[0]*a[0]+b[1]*a[1]+b[2]*a[2]},subNew:function(b,a){return([b[0]-a[0],b[1]-a[1],b[2]-a[2]])},halfNew:function(a){return[a[0]*0.5,a[1]*0.5,a[2]*0.5]},copy:function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2]},copyNew:function(a){return[a[0],a[1],a[2]]},addHalfNew:function(b,a){return[b[0]+0.5*a[0],b[1]+0.5*a[1],b[2]+0.5*a[2]]},det:function(c,b,a){return c[0]*(b[1]*a[2]-b[2]*a[1])-c[1]*(b[0]*a[2]-b[2]*a[0])+c[2]*(b[0]*a[1]-b[1]*a[0])},fmaNew:function(d,c,b){return[d[0]+b*c[0],d[1]+b*c[1],d[2]+b*c[2]]}};var lib_maths={degToRad:function(a){return a*Math.PI/180},bilinear_interpolation:function(i,f,c,h,b,g,a,j,e,d){return(1/((b-c)*(g-h)))*(a*(b-i)*(g-f)+e*(i-c)*(g-f)+j*(b-i)*(f-h)+d*(i-c)*(f-h))}};var lib_array={get_random:function(b){return b[Math.floor(Math.random()*b.length)]}};if(!window.requestAnimationFrame){window.requestAnimationFrame=(function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame})()}if(!window.cancelRequestAnimationFrame){window.cancelRequestAnimationFrame=(function(){return window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame})()}var lib_ajax={get:function(b,c){var a=new XMLHttpRequest();a.open("GET",b,true);a.onreadystatechange=function(){if(a.readyState==4&&a.status==200){c(a.responseText)}};a.send()}};var lib_intersect={normale_triangle:function(d){var b=lib_vector.subNew(d[1],d[0]),a=lib_vector.subNew(d[2],d[0]);var c=lib_vector.prodVect(b,a);lib_vector.normalize(c);return c},abscisse_point_axis:function(d,b,c){var a=lib_vector.subNew(c,d);return lib_vector.dot(a,b)},get_tri_arretes:function(a){return[lib_vector.subNew(a[1],a[0]),lib_vector.subNew(a[2],a[1]),lib_vector.subNew(a[0],a[2])]},SAT:function(a,h,b,e){var g=[],f=[],c,d=true;for(c=0;c<a.length;c++){g.push(this.abscisse_point_axis(e,b,a[c]))}g.sort(function(j,i){return j-i});for(c=0;c<h.length;c++){f.push(this.abscisse_point_axis(e,b,h[c]))}f.sort(function(j,i){return j-i});if((g[0]>f[f.length-1])||(g[g.length-1]<f[0])){d=false}g=null;f=null;return d},intersect_boite_sphere_permissif:function(d,c,b,a){return(b[0]<d[0]+c[0]*0.5+a&&b[0]>d[0]-c[0]*0.5-a&&b[1]<d[1]+c[1]*0.5+a&&b[1]>d[1]-c[1]*0.5-a&&b[2]<d[2]+c[2]*0.5+a&&b[2]>d[2]-c[2]*0.5-a)},intersect_boite_tri:function(d,f,e){var a=[],o,n,m,k=[0,0,0],h,g,b;for(o=-0.5;o<=0.5;o++){for(n=-0.5;n<=0.5;n++){for(m=-0.5;m<=0.5;m++){a.push([d[0]+o*f[0],d[1]+n*f[1],d[2]+m*f[2]])}}}var p=[[1,0,0],[0,1,0],[0,0,1]];var c=this.get_tri_arretes(e);var l=this.normale_triangle(e);if(!this.SAT(a,e,l,k)){return false}for(h=0;h<3;h++){if(!this.SAT(a,e,p[h],k)){return false}}for(h=0;h<3;h++){for(g=0;g<3;g++){b=lib_vector.prodVect(p[h],c[g]);lib_vector.normalize(b);if(!this.SAT(a,e,b,k)){return false}}}return true},get_AABB:function(d){var a=lib_vector.copyNew(d[0]),b=lib_vector.copyNew(d[0]);var f,g;for(f=0;f<d.length;f++){for(g=0;g<3;g++){if(d[f][g]<b[g]){b[g]=d[f][g]}if(d[f][g]>a[g]){a[g]=d[f][g]}}}var e=lib_vector.subNew(a,b);return{dim:e,centre:lib_vector.addHalfNew(b,e)}},plucker_vecteur:function(a,b){return[a[0]*b[1]-a[1]*b[0],a[0]*b[2]-a[2]*b[0],a[0]-b[0],a[1]*b[2]-a[2]*b[1],a[2]-b[2],b[1]-a[1]]},plucker_axe:function(b,a){return[b[0]*a[1]-b[1]*a[0],b[0]*a[2]-b[2]*a[0],-a[0],b[1]*a[2]-b[2]*a[1],-a[2],a[1]]},side:function(a,b){return b[2]*a[3]+b[5]*a[1]+b[4]*a[0]+b[1]*a[5]+b[0]*a[4]+b[3]*a[2]},intersect_ray_tri:function(c,b){var a=this.side(b[0],c);if(a*this.side(b[1],c)<0){return false}if(a*this.side(b[2],c)<0){return false}return true},intersect_ray_sphere:function(d,a,e,c){var b=[e[0]-d[0],e[1]-d[1],e[2]-d[2]];PCvecu=lib_vector.prodVect(b,a);return(lib_vector.size2(PCvecu)<c*c)},intersection_point_ray_tri:function(b,f,j,g){var e=lib_vector.subNew(b[1],b[0]),d=lib_vector.subNew(b[2],b[0]),i=lib_vector.subNew(f,b[0]);var c=lib_vector.det(i,e,d),h=lib_vector.det(j,e,d);if(h==0){return false}var a=-c/h;if(a>0){return false}return{I:lib_vector.fmaNew(f,j,a),d:-a,T:b,face:g}},intersect_ray_quad:function(c,b){var a=this.side(b[0],c);if(a*this.side(b[1],c)<0){return false}if(a*this.side(b[2],c)<0){return false}if(a*this.side(b[3],c)<0){return false}return true},plucker_tri:function(a,c,b){return[this.plucker_vecteur(a,c),this.plucker_vecteur(c,b),this.plucker_vecteur(b,a)]},plucker_quad:function(a,d,c,b){return[this.plucker_vecteur(a,d),this.plucker_vecteur(d,c),this.plucker_vecteur(c,b),this.plucker_vecteur(b,a)]},plucker_boite:function(h,g){var f=[h[0]+0.5*g[0],h[1]-0.5*g[1],h[2]-0.5*g[2]],e=[h[0]+0.5*g[0],h[1]+0.5*g[1],h[2]-0.5*g[2]],b=[h[0]+0.5*g[0],h[1]+0.5*g[1],h[2]+0.5*g[2]],a=[h[0]+0.5*g[0],h[1]-0.5*g[1],h[2]+0.5*g[2]],l=[h[0]-0.5*g[0],h[1]-0.5*g[1],h[2]-0.5*g[2]],k=[h[0]-0.5*g[0],h[1]+0.5*g[1],h[2]-0.5*g[2]],j=[h[0]-0.5*g[0],h[1]+0.5*g[1],h[2]+0.5*g[2]],i=[h[0]-0.5*g[0],h[1]-0.5*g[1],h[2]+0.5*g[2]];return[this.plucker_quad(e,b,i,l),this.plucker_quad(f,a,j,k),this.plucker_quad(f,e,k,l),this.plucker_quad(a,b,j,i)]},intersect_ray_boite:function(b,a){if(this.intersect_ray_quad(b,a[0])){return true}if(this.intersect_ray_quad(b,a[1])){return true}if(this.intersect_ray_quad(b,a[2])){return true}if(this.intersect_ray_quad(b,a[3])){return true}return false}};var GL,CV,CURRENTGEN=0,LSYSTEMS=[];var EXT_FLOAT,EXT_FLOAT2,EXT_UINT,EXT_FLOAT_LINEAR;var NNODESDISPLAYEDMAX=SETTINGS.culling.NSpheres,NNODESTEXTUREDDISPLAYEDMAX=SETTINGS.culling.NSpheresTextured;var NNODES=0;var WEIGHTNODEMIN=-165;var WEIGHTNODETEXTUREDMIN=-150;var WEIGHTALPHATOL=SETTINGS.culling.weightAlphaTol;var WEIGHTGCTOL=SETTINGS.culling.weightGCTol;var WEIGHTNODEINCREASE=SETTINGS.culling.weightNodeIncrease;var NNODESDISPLAYED=0,NNODESTEXTUREDDISPLAYED=0;var MAXIMAGEREQS=SETTINGS.culling.maxImageReqs,NIMAGEREQS=0;var ERODETEXTURESSET,MOUNTAINTEXTURESSET,ALEXADATA=false,STOP=false;var Contexte=(function(){var a=0;return{instance:function(l){var d=document.getElementById(l.canvas_id);CV=d;try{GL=d.getContext("webgl",{antialias:true,premultipliedAlpha:true,alpha:true});EXT_UINT=GL.getExtension("OES_element_index_uint")||GL.getExtension("MOZ_OES_element_index_uint")||GL.getExtension("WEBKIT_OES_element_index_uint");EXT_FLOAT=GL.getExtension("OES_texture_float")||GL.getExtension("MOZ_OES_texture_float")||GL.getExtension("WEBKIT_OES_texture_float");EXT_FLOAT2=GL.getExtension("OES_texture_half_float")||GL.getExtension("MOZ_OES_texture_half_float")||GL.getExtension("WEBKIT_OES_texture_half_float");EXT_FLOAT_LINEAR=GL.getExtension("OES_texture_float_linear")||GL.getExtension("MOZ_OES_texture_float_linear")||GL.getExtension("WEBKIT_OES_texture_float_linear");if(!EXT_FLOAT||!EXT_FLOAT2||!EXT_UINT||!EXT_FLOAT_LINEAR){console.log("Warning : some extension are lacking :(")}}catch(k){alert("Webgl not found");return false}Texture.init();LodSpheres.init();LodGrids.init();RiverSystem.init(GL);Heightmap.init(GL);ErodeTexturesSet.init();var h=Scene.instance({});var m=Shaders.instance({});Shaders.set_defaultShader();var i=Vue.instance({camera:SETTINGS.camera.position0,angle:SETTINGS.camera.viewAngle,zMin:SETTINGS.camera.zNear,zMax:SETTINGS.camera.zFar});i.plein_ecran();var b=Navigation.instance({vue:i});b.set();h.set_navigation(b);var j=SETTINGS.Lsystems.number;var f=SETTINGS.Lsystems.rank;var g=function(){a++;if(a!==3){return}var e=JSON.parse(ALEXADATA);var o=e.alexa;var n=SuperIsland.instance({Lsystems:[{nGenerations:f,list:o,offset:0,gap:j},{nGenerations:f,list:o,offset:1,gap:j},{nGenerations:f,list:o,offset:2,gap:j},{nGenerations:f,list:o,offset:3,gap:j}],centre:[0,0,0],LsystemRadius:SETTINGS.islands.collisionRadius,LsystemRadiusMargin:SETTINGS.islands.collisionRadiusMargin,size:SETTINGS.islands.size,mountainTexturesSet:MOUNTAINTEXTURESSET});h.add_island(n);h.start();var p=function(){CURRENTGEN++;if(CURRENTGEN>20){clearInterval(q)}};var q=setInterval(p,SETTINGS.Lsystems.showGenDt)};lib_ajax.get("php/alexa/alexa.json",function(e){ALEXADATA=e;g()});MOUNTAINTEXTURESSET=ErodeTexturesSet.instance({onload:g,texturesURL:SETTINGS.islands.mountainTexturesURL});ERODETEXTURESSET=ErodeTexturesSet.instance({onload:g,texturesURL:SETTINGS.Lsystems.erodeTexturesURL});if(SETTINGS.water.enable){var c=SurfaceLiquide.instance({URLciel:SETTINGS.water.sky,URLfond:SETTINGS.water.ground});h.set_water(c)}return true}}})();var Maillage=(function(){return{instance:function(a){var c=VBO.instance({tableau_js:a.vertices});var b=VBO_indices.instance({tableau_js:a.indices,int32Indices:a.int32Indices});return{drawAsHeightMapSurface:function(){c.drawAsHeightMapSurface();b.draw()},drawAsIslandHeightMapSurface:function(){c.drawAsIslandHeightMapSurface();b.draw()},draw:function(){c.draw();b.draw()},drawVBO:function(){c.draw()},drawErode:function(){c.drawErode();b.draw()},drawVBOIndices:function(){b.draw()},bindVBOIndices:function(){b.bind()},drawVBOIndices_opt:function(){b.draw_Elements()},draw_water:function(){c.draw_water();b.draw()}}}}}());var SCENE;var Scene=(function(){return{instance:function(l){var j=[],h=[],b=false,i=false,f=false,k="auto",e=false;var c=0;var n;var d=function(o){o.draw()},m=function(o){o.drawPhysics()};GL.enable(GL.DEPTH_TEST);GL.depthFunc(GL.LEQUAL);GL.clearDepth(1);GL.enable(GL.BLEND);GL.blendFunc(GL.SRC_ALPHA,GL.ONE_MINUS_SRC_ALPHA);var a=false;var g={start:function(){f=true;g.draw();n=setInterval(g.drawPhysics,SETTINGS.physics.dt)},pause:function(){f=false},stop:function(){STOP=true;i=true;f=false;if(n){clearInterval(n)}},draw:function(p){if(!f||i){return}NNODESDISPLAYED=0,NNODESTEXTUREDDISPLAYED=0;Shaders.set_defaultShader();GL.viewport(0,0,CV.width,CV.height);GL.clear(GL.COLOR_BUFFER_BIT|GL.DEPTH_BUFFER_BIT);VUE.draw();Shaders.unset_defaultShader();j.map(d);if(e){e.draw()}h.map(d);GL.flush();var q=Math.min(NNODESDISPLAYED-NNODESDISPLAYEDMAX,NNODESDISPLAYEDMAX);WEIGHTNODEMIN+=((q>0)?1:-1)*WEIGHTNODEINCREASE*Math.abs(q/NNODESDISPLAYEDMAX);var o=Math.min(NNODESTEXTUREDDISPLAYED-NNODESTEXTUREDDISPLAYEDMAX,NNODESTEXTUREDDISPLAYEDMAX);WEIGHTNODETEXTUREDMIN+=((o>0)?1:-1)*WEIGHTNODEINCREASE*Math.abs(o/NNODESTEXTUREDDISPLAYEDMAX);window.requestAnimationFrame(g.draw)},drawPhysics:function(){if(i){return}VUE.drawPhysics();if(e){e.drawPhysics()}h.map(m);if(b){b.drawPhysics()}c=(c+1)%LSYSTEMS.length;LSYSTEMS[c].sort(VUE.get_cameraPosition())},add_Lsystem:function(o){j.push(o)},add_island:function(o){h.push(o)},set_navigation:function(o){b=o},set_water:function(o){e=o},pick:function(r,q,s,t){var p=false,o=10000000000;LSYSTEMS.map(function(u){var v=u.pick(r,q);if(!v){return}if(v.d<o){p=u;o=v.d;if(a){a.highlight=0}else{LABEL.style.display="block"}LABEL.style.top=(t+24)+"px",LABEL.style.left=(s+24)+"px";a=v.node;v.node.highlight=1}});if(a){if(k!=="pointer"){CV.style.cursor="pointer";k="pointer"}LABEL.innerHTML=a.label}else{if(k!=="auto"){k="auto";CV.style.cursor="auto"}}if(!p&&a){a.highlight=0;a=false;LABEL.style.display="none"}}};SCENE=g;return g}}})();var Shaders=(function(){var aw=function(a8,a6,a9){var a7=GL.createShader(a6);GL.shaderSource(a7,a8);GL.compileShader(a7);if(!GL.getShaderParameter(a7,GL.COMPILE_STATUS)){alert(a9+" : "+GL.getShaderInfoLog(a7));return false}return a7};var h=function(a8,a7,ba){var a9=aw(a8,GL.VERTEX_SHADER,ba+" VERTEX_SHADER");var a6=aw(a7,GL.FRAGMENT_SHADER,ba+" FRAGMENT_SHADER");y=GL.createProgram();GL.attachShader(y,a9);GL.attachShader(y,a6);GL.linkProgram(y);return y};var aE="attribute vec2 position;\n\nvarying vec2 vUV;\n\nvoid main(void) {\n    vUV=position+vec2(.5, .5);\n    gl_Position = vec4(2.*position, 0., 1.);\n} \n",ay="precision highp float;\n\nuniform float emboss;\nuniform sampler2D samplerErode, samplerHeight;\n\nvarying vec2 vUV;\n\nvoid main(void) {\n    vec4 height=texture2D(samplerHeight, vUV);\n    vec4 erode=texture2D(samplerErode, vUV);\n\n    float eroded=height.r*(0.01+0.99*erode.r);\n    float embossed=max(height.r, erode.r);\n\n    float ziou=mix(eroded, embossed, emboss);\n    //float ziou=eroded;\n    //gl_FragColor=texture2D(sampler_height, vUV);\n    gl_FragColor=vec4(ziou, 0.,0.,1.);\n} \n",U;var F,at,p,L;var ac="precision mediump float;\n\nattribute vec2 position;\n\nuniform mat4 matrice_vue, matrice_projection, matrice_objet;\nuniform vec3 camera;         //camera position\nuniform vec2 ks[6];          //vecteurs d'onde\nuniform float As[6];         //amplitudes\nuniform float ws[6];         //frequences angulaires\nuniform float t;             //temps en secondes\nuniform float i;             //indice de réfraction\nuniform float H;             //profondeur\nuniform float visibilite;    //visibility\nuniform float fogDmin, fogDmax; //fog distances\nuniform vec3 lumiere;        //direction de la lumiere\n\nvarying vec2 UVfond, UVciel; //UV coordinates for sky and ground\nvarying float Kr, Kv;        //reflexion and refraction coefficiens\nvarying float Il;            //light intensity\nvarying float vFog, vCaustique;          //fog coefficient\n\n\nvoid main(void) {\n    vec3 dP=vec3(0.,0.,0.);                           //displacement of the wave\n    vec3 N=vec3(0.,1.,0.);                            //normal vector\n    float inSin;                                      \n    vec3 offset=vec3(camera.x,0., camera.y);\n    vec3 position3=vec3(position.x,0.,position.y);\n    vec3 positionOffset=position3-offset;\n    for (int i=0; i<6; ++i) {                         //wave loop\n        inSin=dot(ks[i], positionOffset.xz)+t*ws[i];\n        dP.y+=0.1*As[i]*sin(inSin);\n        N.xz+=As[i]*cos(inSin)*ks[i];                 //normale en une surface : N(x,y)=dM/dx ^ dM/dy\n    }\n    //N=vec3(0.,1.,0.);\n    vec3 P=position3+dP;                              //true point position\n    N=normalize(N);\n    vec3 C=-camera.xzy;                                \n    vec3 I=normalize(P+offset+C);                            //incident vector\n\n    vec3 R=reflect(I, N);                             //reflected ray\n    float theta=acos(R.x/sqrt(R.x*R.x+R.z*R.z));      //spherical coordinates for R : longitude\n    float phi=acos(R.y);                              //spherical coordinates for R : lattitude\n    UVciel=vec2(phi, theta)/6.28;\n\n    \n    vec3 Ra=refract(-I,N,i);                         //refracted ray\n\n    float k=H/Ra.y;                                  //distance runned by the ray underwater\n    UVfond=(P-offset+k*Ra).xz;    \n\n    Kv=smoothstep(0., visibilite,k);                 //Water ground visibility coefficient 1->we cannot see the ground\n    Kr=min(1., pow(dot(I, N),2.));                   //Fresnel coefficient 1->total refraction\n\n    //eclairage\n    vec3 Ie=lumiere.xzy;                              //light incidence\n    vec3 Re=reflect(Ie, N);                           //light reflected ray\n    Il=1.;                         //ambient lighting\n    Il+=2.*max(0.,pow(-1.5*dot(Re,Ie),8.));          //specular lighting\n\n    vCaustique=length(N.xz);                        //caustics. utterly empirical...\n\n    //fog\n    vFog =  1.-smoothstep(fogDmin, fogDmax, distance(P-offset,C));\n\n    gl_Position = matrice_projection * matrice_vue * matrice_objet * vec4(P, 1.0);\n}",aa="precision mediump float;\n\nuniform sampler2D samplerFond, samplerCiel;\nuniform vec4 couleur_eau;        //couleur de l'eau\nuniform vec3 fogColor;           //fog color\n\nvarying vec2 UVfond, UVciel;     //Coordonnées de texture du ciel et du fond\nvarying float Kr, Kv;            //coefficients de reflexion et de réfraction\nvarying float Il;                //intensité lumineuse\nvarying float vFog, vCaustique;\n\nvoid main(void) {\n    float Icaustique=1.+0.1*smoothstep(0.07,0.15,vCaustique); //intensité des caustiques\n    vec4 couleur_ciel=texture2D(samplerCiel, UVciel);\n    vec4 couleur_fond=mix(texture2D(samplerFond, UVfond)*Icaustique, couleur_eau, Kv);\n    vec4 couleur=mix(couleur_ciel, couleur_fond, Kr);\n    couleur.a=mix(0.8, 1., Kr);\n\n    vec3 waterColor =mix(vec3(0.,0.,0.), couleur.rgb*Il, couleur.a);\n\n    gl_FragColor = vec4(mix(fogColor,waterColor, vFog), 1.);\n\n}",D;var E,A,C,j,S,Q,w,aY,av,H,aT,aJ,an,al,a3,ap,q,ab,a;var aW="attribute vec2 position;\nvarying vec2 fragPos;\n\nvoid main(void) {\n    fragPos=position;\n    gl_Position = vec4(2.*position, 0., 1.);\n}",ah="precision mediump float;\n\nuniform sampler2D sampler;\nvarying vec2 fragPos;\n\nvoid main(void) {\n    gl_FragColor=texture2D(sampler, fragPos+vec2(.5, .5));\n}",b;var T,aA;var ad="attribute vec2 position;\nvarying vec2 fragPos;\n\nvoid main(void) {\n    fragPos=position;\n    gl_Position = vec4(2.*position, 0., 1.);\n}",az="precision highp float;\n\nuniform sampler2D sampler;\nuniform vec2 wh, size;\nuniform float H;\nvarying vec2 fragPos;\n\nvec3 getPoint(float x, float y, vec2 uv, float dPx, float dPy){\n    vec4 t = texture2D(sampler, uv+vec2(x*dPx,y*dPy));\n    return vec3(x*dPx*size.x,y*dPy*size.y,H*t.x);\n}\n\nvoid main(void) {\n    float dPx=1./(wh.x);\n    float dPy=1./(wh.y);\n    vec2 uv=fragPos+vec2(.5, .5);\n    vec4 color=texture2D(sampler, uv);\n\n    //vec3 origin=vec3(0.,0.,color.r*H);\n    vec3 origin=getPoint(0.,0., uv, dPx, dPy);\n\n    vec3 points[4];\n    points[0]=getPoint(-1.,0., uv, dPx, dPy);\n    points[1]=getPoint(0.,-1., uv, dPx, dPy);\n    points[2]=getPoint(1. ,0., uv, dPx, dPy);\n    points[3]=getPoint(0. ,1., uv, dPx, dPy);\n\n    vec3 normal=normalize(cross(points[1]-points[3], points[2]-points[0]));\n\n    normal.xy=vec2(0.5,0.5)+normal.xy*0.5;\n\n    //normal= texture2D(sampler, uv).rgb;\n    //normal=vec3(1.,0.,0.);\n    //normal=vec3(0.5,0.5,1.);\n    gl_FragColor=vec4(color.r, normal);\n    //gl_FragColor=vec4(normal, 1.);\n\n}",M;var ax,o,aP,aX,m;var d="attribute vec2 position;\n\nuniform vec2 centre, scale;\n\nvarying vec2 vUV;\n\nvoid main(void) {\n    gl_Position = vec4(centre+scale*position, 0.,1.);\n    vUV = position+vec2(0.5,0.5);\n}",aL="precision highp float;\n\nuniform sampler2D sampler;\nuniform float alpha;\n\nvarying vec2 vUV;\n\nvoid main(void) {\n    vec4 colorGauss=texture2D(sampler, vUV);\n    colorGauss.a=colorGauss.r*alpha;\n    gl_FragColor = colorGauss;\n}",f;var x,aQ,J,aj,a4;var aB="attribute vec2 position;\n\nuniform mat4 matrice_vue, matrice_projection, matrice_objet;\nuniform float hMax, hMaxIsland,  fogDmin, fogDmax;\nuniform vec2 scale, centre, scaleIsland, offsetIsland;\nuniform sampler2D samplerHeightMap, samplerIsland;\n\nvarying float vFog, vAlpha, vHeight;\nvarying vec2 vUV;\nvarying vec3 vNormal;\n\nvoid main(void) {\n    vec2 pos2=position*scale+centre;\n    vec3 pos=vec3(pos2.x,pos2.y,0.);\n    vec4 hmColor=texture2D(samplerHeightMap, position);\n    pos.z+=hmColor.r*hMax;\n\n    //smooth border between Lsystem and island :\n    vAlpha=smoothstep(0.001,0.01,hmColor.r);\n\n    vec4 islandHM=texture2D(samplerIsland, ((position-vec2(0.5,0.5))*scaleIsland)+offsetIsland);\n    pos.z+=islandHM.r*hMaxIsland;\n\n    vec4 posScene=matrice_vue * matrice_objet * vec4(pos, 1.0);\n    gl_Position = matrice_projection * posScene;    \n\n    vUV = position;\n    vNormal=normalize(hmColor.gba+islandHM.gba-vec3(1.,1.,.5));\n    vFog =  1.-smoothstep(fogDmin, fogDmax, length(posScene.xyz));\n    vHeight=smoothstep(0.2, 0.5, pos.z);\n}",ag="precision mediump float;\n\nuniform vec2 scaleUV;\nuniform vec3 lightDir, fogColor;\nuniform sampler2D sampler, samplerNormals, samplerRivers;\n\nvarying float vFog, vAlpha, vHeight;\nvarying vec2 vUV;\nvarying vec3 vNormal;\n\nconst vec3 Z=vec3(0.,0.,1.);\n\n//normal mapping : retourne la matrice de rotation d'axe u et d'angle theta\nmat3 rot_angleAxe(float theta, vec3 u) {\n    float c=cos(theta);\n    float s=sin(theta);\n    return mat3(\n        u.x*u.x+(1.-u.x*u.x)*c,  u.x*u.y*(1.-c)-u.z*s,    u.x*u.z*(1.-c)+u.y*s,\n        u.x*u.y*(1.-c)+u.z*s,    u.y*u.y+(1.-u.y*u.y)*c,  u.y*u.z*(1.-c)-u.x*s,\n        u.x*u.z*(1.-c)-u.y*s,    u.y*u.z*(1.-c)+u.x*s,    u.z*u.z+(1.-u.z*u.z)*c\n    );\n}\n\n//normal mapping : retourne la matrice de rotation qui envoie u sur v. u et v sont unitaires\nmat3 rot_vectVect(vec3 u,vec3 v) {\n    vec3 axe=normalize(cross(v,u));\n    float theta=acos(dot(u,v));\n    return rot_angleAxe(theta, axe);\n}\n\n\nvoid main(void) {\n    vec2 uvScaled=vUV*scaleUV;\n\n    vec4 colorRiver=texture2D(samplerRivers, vUV);\n\n    vec4 color=texture2D(sampler, uvScaled);\n    vec4 texture_normale=texture2D(samplerNormals, uvScaled);\n    vec3 n=vec3(2.*(texture_normale.x-0.5), 2.*(texture_normale.y-0.5), texture_normale.z);\n    mat3 rot=rot_vectVect(Z, normalize(vNormal));\n    float Kriver=step(0.1, colorRiver.a)*colorRiver.a;\n    vec3 bump_normal=mix(rot*n, vec3(0.,0.,1.1), min(1., Kriver*2.));\n\n    //light intensity\n    float I=dot(bump_normal,lightDir);\n \n    float alpha=vAlpha*mix(1., vHeight,min(1.,16.*Kriver));\n\n    vec3 col=I*mix(color.rgb, colorRiver.rgb, Kriver);\n\n    gl_FragColor =  vec4(mix(fogColor, col, vFog), alpha);\n   \n}",aV;var ar,aR,aG,N,Z,g,a5,ae,t,X,ao,l,aC,G,aS,aI,s,am,aU,i;var aZ="attribute vec2 position;\n\nuniform mat4 matrice_vue, matrice_projection, matrice_objet;\nuniform float hMax, fogDmin, fogDmax;\nuniform vec2 scale, centre;\nuniform sampler2D samplerHeightMap;\n\n\nvarying float vFog, vHeight;\nvarying vec2 vUV;\nvarying vec3 vNormal;\n\nvoid main(void) {\n    vec2 pos2=position*scale+centre;\n    vec3 pos=vec3(pos2.xy,0.);\n\n    vec4 hmColor=texture2D(samplerHeightMap, position);\n    pos.z+=hmColor.r*hMax;\n\n    vec4 posScene=matrice_vue * matrice_objet * vec4(pos, 1.0);\n    gl_Position = matrice_projection * posScene;    \n\n    vUV = position;\n    vNormal=normalize(hmColor.gba-vec3(0.5,0.5,0.));\n    //vNormal=vec3(0.,0.,1.);\n    vFog =  1.-smoothstep(fogDmin, fogDmax, length(posScene.xyz));\n    vHeight = smoothstep(0.2, 0.5, pos.z);\n}",v="precision mediump float;\n\nuniform vec3 lightDir, fogColor;\nuniform vec2 scaleUV;\nuniform sampler2D sampler, samplerNormals, samplerRivers;\n\nvarying float vFog, vHeight;\nvarying vec2 vUV;\nvarying vec3 vNormal;\n\n\nconst vec3 Z=vec3(0.,0.,1.);\n\n//normal mapping : retourne la matrice de rotation d'axe u et d'angle theta\nmat3 rot_angleAxe(float theta, vec3 u) {\n    float c=cos(theta);\n    float s=sin(theta);\n    return mat3(\n        u.x*u.x+(1.-u.x*u.x)*c,  u.x*u.y*(1.-c)-u.z*s,    u.x*u.z*(1.-c)+u.y*s,\n        u.x*u.y*(1.-c)+u.z*s,    u.y*u.y+(1.-u.y*u.y)*c,  u.y*u.z*(1.-c)-u.x*s,\n        u.x*u.z*(1.-c)-u.y*s,    u.y*u.z*(1.-c)+u.x*s,    u.z*u.z+(1.-u.z*u.z)*c\n    );\n}\n\n//normal mapping : retourne la matrice de rotation qui envoie u sur v. u et v sont unitaires\nmat3 rot_vectVect(vec3 u,vec3 v) {\n    vec3 axe=normalize(cross(v,u));\n    float theta=acos(dot(u,v));\n    return rot_angleAxe(theta, axe);\n}\n\n\nvoid main(void) {\n    vec4 colorRiver=texture2D(samplerRivers, vUV);\n\n    vec2 UVscaled=vUV*scaleUV;\n    vec4 color=texture2D(sampler, UVscaled);\n    vec4 texture_normale=texture2D(samplerNormals, UVscaled);\n\n    //vec3 n=vec3((texture_normale.x-0.5), (texture_normale.y-0.5), texture_normale.z);\n    //mat3 rot=rot_vectVect(Z, vNormal);\n    //vec3 bump_normal=rot*n;\n    //vec3 bump_normal=mix(rot*n, vec3(0.,0.,1.), min(1., colorRiver.a*4.));\n\n    float riverK= step(0.1, colorRiver.a)*colorRiver.a;\n    vec3 bump_normal=mix(vNormal, vec3(0.,0.,1.), min(1., riverK*1.));\n\n    //light intensity\n    float I=dot(bump_normal,lightDir);\n    //float I=dot(vNormal,lightDir);\n\n   \n    vec3 col=I*mix(color.rgb, colorRiver.rgb, riverK);\n   \n    //compute alpha to mix water river and sea water near the seashore\n    float alpha=mix(1., vHeight,min(1.,16.*colorRiver.a));\n    //float alpha=vHeight;\n    gl_FragColor =  vec4(mix(fogColor, col, vFog), alpha);\n    //gl_FragColor = vec4(alpha,0.,0.,1.);\n}",c;var Y,aq,W,I,a2,a0,k,e,r,aO,a1,n,aK,K,z,u;var P="\nprecision mediump float;\n\nattribute vec3 position;\n\nuniform vec3 centre, camera, lightDir;\nuniform float scale, hightLight;\nuniform mat4 matrice_vue, matrice_projection, matrice_objet;\n\nvarying float vI;\nvarying vec2 vUV;\n\n\nvoid main(void) {\n    //compute position\n    vec4 pos= matrice_objet * vec4((position*scale)+centre, 1.0);\n\n    //compute refraction\n    vec3 incident=normalize(pos.xyz+camera);            //incident vector\n    vec3 refracted=refract(incident, position, 1./1.6);      //refracted vector\n    vec3 reflected=reflect(incident, position);\n    float k=(centre.z-pos.z)/refracted.z;              //M,k so as M=P + k * refracted belongs to (Centrexz)\n    vec3 M = ((pos.xyz + k*refracted)-centre)/scale;  \n    vUV=vec2(0.5,0.5)+5.*(M.xy*0.5);\n    \n    //compute lighting\n    vI=(0.6+0.5*hightLight);                                //mouseover hightlighting \n    vI*=0.8+0.3*max(dot(position, lightDir),0.);            //diffuse\n    vI*=(1.+max(0., 2.*pow(dot(reflected, lightDir), 6.))); //specular\n    \n    gl_Position = matrice_projection * matrice_vue * pos;\n}",aN="precision mediump float;\n\nuniform float alpha;\nuniform sampler2D sampler;\n\nvarying float vI;\nvarying vec2 vUV;\n\n\nvoid main(void) {\n    vec4 textureColor = texture2D(sampler, vUV);\n    gl_FragColor = vec4(textureColor.rgb*vI,alpha);\n}",y;var aH,B,aM,aD,af,V,au,aF,O,ak,ai;var R={instance:function(a6){U=h(aE,ay,"ERODE");at=GL.getUniformLocation(U,"emboss");p=GL.getUniformLocation(U,"samplerErode");L=GL.getUniformLocation(U,"samplerHeight");F=GL.getAttribLocation(U,"position");D=h(ac,aa,"WATER");A=GL.getUniformLocation(D,"matrice_projection");E=GL.getUniformLocation(D,"matrice_vue");C=GL.getUniformLocation(D,"matrice_objet");w=GL.getUniformLocation(D,"camera");S=GL.getUniformLocation(D,"samplerCiel");Q=GL.getUniformLocation(D,"samplerFond");aY=GL.getUniformLocation(D,"As");av=GL.getUniformLocation(D,"ks");H=GL.getUniformLocation(D,"ws");aT=GL.getUniformLocation(D,"i");aJ=GL.getUniformLocation(D,"H");an=GL.getUniformLocation(D,"couleur_eau");al=GL.getUniformLocation(D,"visibilite");a3=GL.getUniformLocation(D,"lumiere");ap=GL.getUniformLocation(D,"t");q=GL.getUniformLocation(D,"fogDmin");ab=GL.getUniformLocation(D,"fogDmax");a=GL.getUniformLocation(D,"fogColor");j=GL.getAttribLocation(D,"position");b=h(aW,ah,"TEXTURE READ");aA=GL.getUniformLocation(b,"sampler");T=GL.getAttribLocation(b,"position");M=h(ad,az,"NORMALS");o=GL.getUniformLocation(M,"sampler");aP=GL.getUniformLocation(M,"wh");aX=GL.getUniformLocation(M,"H");m=GL.getUniformLocation(M,"size");ax=GL.getAttribLocation(M,"position");aV=h(aB,ag,"HEIGHTMAP SURFACE");aI=GL.getUniformLocation(aV,"matrice_projection");aS=GL.getUniformLocation(aV,"matrice_vue");G=GL.getUniformLocation(aV,"matrice_objet");aG=GL.getUniformLocation(aV,"scaleUV");ar=GL.getUniformLocation(aV,"scale");aR=GL.getUniformLocation(aV,"centre");Z=GL.getUniformLocation(aV,"sampler");g=GL.getUniformLocation(aV,"samplerIsland");a5=GL.getUniformLocation(aV,"samplerNormals");t=GL.getUniformLocation(aV,"samplerHeightMap");ae=GL.getUniformLocation(aV,"samplerRivers");X=GL.getUniformLocation(aV,"hMax");ao=GL.getUniformLocation(aV,"hMaxIsland");aC=GL.getUniformLocation(aV,"offsetIsland");l=GL.getUniformLocation(aV,"scaleIsland");i=GL.getUniformLocation(aV,"lightDir");s=GL.getUniformLocation(aV,"fogDmin");am=GL.getUniformLocation(aV,"fogDmax");aU=GL.getUniformLocation(aV,"fogColor");N=GL.getAttribLocation(aV,"position");c=h(aZ,v,"HEIGHTMAP SURFACE");n=GL.getUniformLocation(c,"matrice_projection");a1=GL.getUniformLocation(c,"matrice_vue");aO=GL.getUniformLocation(c,"matrice_objet");W=GL.getUniformLocation(c,"scaleUV");Y=GL.getUniformLocation(c,"scale");aq=GL.getUniformLocation(c,"centre");a2=GL.getUniformLocation(c,"sampler");a0=GL.getUniformLocation(c,"samplerNormals");k=GL.getUniformLocation(c,"samplerHeightMap");e=GL.getUniformLocation(c,"samplerRivers");r=GL.getUniformLocation(c,"hMax");u=GL.getUniformLocation(c,"lightDir");aK=GL.getUniformLocation(c,"fogDmin");K=GL.getUniformLocation(c,"fogDmax");z=GL.getUniformLocation(c,"fogColor");I=GL.getAttribLocation(c,"position");f=h(d,aL,"HEIGHTMAP");x=GL.getUniformLocation(f,"scale");aQ=GL.getUniformLocation(f,"centre");aj=GL.getUniformLocation(f,"sampler");a4=GL.getUniformLocation(f,"alpha");J=GL.getAttribLocation(f,"position");y=h(P,aN,"DEFAULT");B=GL.getUniformLocation(y,"matrice_projection");aH=GL.getUniformLocation(y,"matrice_vue");aM=GL.getUniformLocation(y,"matrice_objet");ak=GL.getUniformLocation(y,"sampler");aF=GL.getUniformLocation(y,"camera");aD=GL.getUniformLocation(y,"scale");af=GL.getUniformLocation(y,"centre");V=GL.getUniformLocation(y,"hightLight");ai=GL.getUniformLocation(y,"alpha");O=GL.getUniformLocation(y,"lightDir");au=GL.getAttribLocation(y,"position")},set_matriceProjection:function(a6){GL.uniformMatrix4fv(B,false,a6)},set_vue:function(a6,a7){GL.uniform3fv(aF,a7);GL.uniformMatrix4fv(aH,false,a6)},set_matriceObjet:function(a6){GL.uniformMatrix4fv(aM,false,a6)},set_vertexPointers:function(){GL.vertexAttribPointer(au,3,GL.FLOAT,false,12,0)},set_scale:function(a6){GL.uniform1f(aD,a6)},set_position:function(a6){GL.uniform3fv(af,a6)},set_alpha:function(a6){GL.uniform1f(ai,a6)},set_hightLight:function(a6){GL.uniform1f(V,a6)},set_defaultShader:function(){GL.useProgram(y);GL.enableVertexAttribArray(au);GL.uniform1i(ak,0);GL.uniform3fv(O,SETTINGS.light.direction)},unset_defaultShader:function(){GL.disableVertexAttribArray(au)},set_heightMap_shaders:function(){GL.useProgram(f);GL.enableVertexAttribArray(J)},unset_heightMap_shaders:function(){GL.disableVertexAttribArray(J)},set_node_heightMap:function(a8,a6,a7){GL.uniform2fv(x,a8);GL.uniform2fv(aQ,a6);GL.uniform1f(a4,a7)},set_vertexPointers_heightMap:function(){GL.vertexAttribPointer(J,2,GL.FLOAT,false,8,0)},set_heightMapSurface_shaders:function(){GL.useProgram(aV);GL.enableVertexAttribArray(N);GL.uniform1i(Z,0),GL.uniform1i(t,1),GL.uniform1i(a5,2),GL.uniform1i(g,3),GL.uniform1i(ae,4);GL.uniform3fv(i,SETTINGS.light.direction)},unset_heightMapSurface_shaders:function(){GL.disableVertexAttribArray(N)},set_vertexPointers_heightMapSurface:function(){GL.vertexAttribPointer(N,2,GL.FLOAT,false,8,0)},set_matriceObjet_heightMapSurface:function(a6){GL.uniformMatrix4fv(G,false,a6)},set_matriceProjection_heightMapSurface:function(a6){GL.uniformMatrix4fv(aI,false,a6)},set_matriceVue_heightMapSurface:function(a6){GL.uniformMatrix4fv(aS,false,a6)},set_hMax_heightMapSurface:function(a6){GL.uniform1f(X,a6)},set_dim_heightMapSurface:function(a7,a6){GL.uniform2fv(ar,a7);GL.uniform2fv(aR,a6)},set_scaleUV_heightMapSurface:function(a7,a6){GL.uniform2f(aG,a7,a6)},set_island_heightMapSurface:function(a6,a8,a7){GL.uniform1f(ao,a6);GL.uniform2fv(l,a8);GL.uniform2fv(aC,a7)},set_fog_heightMapSurface:function(a8,a7,a6){GL.uniform1f(s,a8),GL.uniform1f(am,a7),GL.uniform3fv(aU,a6)},set_islandHeightMapSurface_shaders:function(){GL.useProgram(c);GL.enableVertexAttribArray(I);GL.uniform1i(a2,0),GL.uniform1i(k,1),GL.uniform1i(a0,2),GL.uniform1i(e,3);GL.uniform3fv(u,SETTINGS.light.direction)},unset_islandHeightMapSurface_shaders:function(){GL.disableVertexAttribArray(I)},set_vertexPointers_islandHeightMapSurface:function(){GL.vertexAttribPointer(I,2,GL.FLOAT,false,8,0)},set_matriceObjet_islandHeightMapSurface:function(a6){GL.uniformMatrix4fv(aO,false,a6)},set_matriceProjection_islandHeightMapSurface:function(a6){GL.uniformMatrix4fv(n,false,a6)},set_matriceVue_islandHeightMapSurface:function(a6){GL.uniformMatrix4fv(a1,false,a6)},set_hMax_islandHeightMapSurface:function(a6){GL.uniform1f(r,a6)},set_dim_islandHeightMapSurface:function(a7,a6){GL.uniform2fv(Y,a7);GL.uniform2fv(aq,a6)},set_scaleUV_islandHeightMapSurface:function(a7,a6){GL.uniform2f(W,a7,a6)},set_fog_islandHeightMapSurface:function(a8,a7,a6){GL.uniform1f(aK,a8),GL.uniform1f(K,a7),GL.uniform3fv(z,a6)},set_normals_shaders:function(){GL.useProgram(M);GL.enableVertexAttribArray(ax);GL.uniform1i(o,0)},unset_normals_shaders:function(){GL.disableVertexAttribArray(ax)},set_vertexPointers_normals:function(){GL.vertexAttribPointer(ax,2,GL.FLOAT,false,8,0)},set_whHSize:function(a6,a8,a7,ba,a9){GL.uniform2f(aP,a6,a8);GL.uniform1f(aX,a7);GL.uniform2f(m,ba,a9)},set_textureRead_shaders:function(){GL.useProgram(b);GL.enableVertexAttribArray(T);GL.uniform1i(aA,0)},unset_textureRead_shaders:function(){GL.disableVertexAttribArray(T)},set_vertexPointers_textureRead:function(){GL.vertexAttribPointer(T,2,GL.FLOAT,false,8,0)},set_water_shader:function(){GL.useProgram(D);GL.enableVertexAttribArray(j);GL.uniform1i(S,0);GL.uniform1i(Q,1)},set_fog_water:function(a8,a7,a6){GL.uniform1f(q,a8),GL.uniform1f(ab,a7),GL.uniform3fv(a,a6)},unset_water_shader:function(){GL.disableVertexAttribArray(j)},set_time_water:function(a6){GL.uniform1f(ap,a6)},set_liquid_water:function(a8,a9,a7,ba,a6){GL.uniform1f(aT,a8);GL.uniform1f(aJ,a9);GL.uniform4fv(an,a7);GL.uniform1f(al,ba);GL.uniform3fv(a3,a6)},set_vagues_water:function(a6,a7,a8){GL.uniform1fv(aY,a6);GL.uniform2fv(av,a7);GL.uniform1fv(H,a8)},set_matrices_water:function(a6,a7){GL.uniformMatrix4fv(A,false,a6);GL.uniformMatrix4fv(E,false,a7)},set_matriceObjet_water:function(a6){GL.uniformMatrix4fv(C,false,a6)},set_camera_water:function(a6){GL.uniform3fv(w,a6)},set_vertexPointers_water:function(){GL.vertexAttribPointer(j,2,GL.FLOAT,false,8,0)},set_erode_shaders:function(a6){GL.useProgram(U);GL.enableVertexAttribArray(F);GL.uniform1i(p,1);GL.uniform1i(L,0);GL.uniform1f(at,a6)},unset_erode_shaders:function(){GL.disableVertexAttribArray(F)},set_vertexPointers_erode:function(){GL.vertexAttribPointer(F,2,GL.FLOAT,false,8,0)}};return R})();var Texture=(function(){var b,a;return{init:function(){a=GL.createTexture();var c=new Image();c.onload=function(d){GL.bindTexture(GL.TEXTURE_2D,a);GL.texImage2D(GL.TEXTURE_2D,0,GL.RGBA,GL.RGBA,GL.UNSIGNED_BYTE,c);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_MAG_FILTER,GL.LINEAR);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_MIN_FILTER,GL.LINEAR_MIPMAP_LINEAR);GL.generateMipmap(GL.TEXTURE_2D);GL.bindTexture(GL.TEXTURE_2D,null);b=true};c.src=SETTINGS.Lsystems.defaultTextureImageURL},get_default:function(){return a},instance:function(c){var d=false,f=GL.createTexture(),h=new Image();c.minFilter=c.minFilter||GL.NEAREST_MIPMAP_LINEAR;h.src=c.url;var g=function(){GL.bindTexture(GL.TEXTURE_2D,f);GL.texImage2D(GL.TEXTURE_2D,0,GL.RGBA,GL.RGBA,GL.UNSIGNED_BYTE,h);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_MAG_FILTER,GL.LINEAR);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_MIN_FILTER,c.minFilter);GL.generateMipmap(GL.TEXTURE_2D);GL.bindTexture(GL.TEXTURE_2D,null);d=true;if(c.onload){c.onload()}};h.onload=function(){g()};var e={is_loaded:function(){return d},draw:function(){if(!d){return false}GL.bindTexture(GL.TEXTURE_2D,f);return true}};return e}}})();var VBO=(function(){return{instance:function(a){var b=GL.createBuffer();GL.bindBuffer(GL.ARRAY_BUFFER,b);GL.bufferData(GL.ARRAY_BUFFER,new Float32Array(a.tableau_js),GL.STATIC_DRAW);return{draw:function(){GL.bindBuffer(GL.ARRAY_BUFFER,b);Shaders.set_vertexPointers()},drawErode:function(){GL.bindBuffer(GL.ARRAY_BUFFER,b);Shaders.set_vertexPointers_erode()},draw_heightMap:function(){GL.bindBuffer(GL.ARRAY_BUFFER,b);Shaders.set_vertexPointers_heightMap()},draw_normalMap:function(){GL.bindBuffer(GL.ARRAY_BUFFER,b);Shaders.set_vertexPointers_normals()},draw_textureRead:function(){GL.bindBuffer(GL.ARRAY_BUFFER,b);Shaders.set_vertexPointers_textureRead()},drawAsHeightMapSurface:function(){GL.bindBuffer(GL.ARRAY_BUFFER,b);Shaders.set_vertexPointers_heightMapSurface()},drawAsIslandHeightMapSurface:function(){GL.bindBuffer(GL.ARRAY_BUFFER,b);Shaders.set_vertexPointers_islandHeightMapSurface()},draw_water:function(){GL.bindBuffer(GL.ARRAY_BUFFER,b);Shaders.set_vertexPointers_water()}}}}})();var VBO_indices=(function(){return{instance:function(b){if(!b.int32Indices){b.int32Indices=false}var c=GL.createBuffer();GL.bindBuffer(GL.ELEMENT_ARRAY_BUFFER,c);GL.bufferData(GL.ELEMENT_ARRAY_BUFFER,(b.int32Indices)?new Uint32Array(b.tableau_js):new Uint16Array(b.tableau_js),GL.STATIC_DRAW);var a=b.tableau_js.length;return{draw:function(){GL.bindBuffer(GL.ELEMENT_ARRAY_BUFFER,c);GL.drawElements(GL.TRIANGLES,a,(b.int32Indices)?GL.UNSIGNED_INT:GL.UNSIGNED_SHORT,0)},bind:function(){GL.bindBuffer(GL.ELEMENT_ARRAY_BUFFER,c)},draw_Elements:function(){GL.drawElements(GL.TRIANGLES,a,GL.UNSIGNED_SHORT,0)}}}}})();var Objet=(function(){return{instance:function(b){b.matrix=b.matrix||lib_matrix4.get_I4();var d=b.texture||false;var a=lib_matrix4.copyNew(b.matrix);var c={drawAsHeightMapSurface:function(e){Shaders.set_matriceObjet_heightMapSurface(e);b.maillage.drawAsHeightMapSurface()},drawAsIslandHeightMapSurface:function(e){Shaders.set_matriceObjet_islandHeightMapSurface(e);b.maillage.drawAsIslandHeightMapSurface()},draw:function(){if(d){d.draw()}Shaders.set_matriceObjet(a);b.maillage.draw()},rotateX:function(e){lib_matrix_rot4.rotateX(a,e)},rotateY:function(e){lib_matrix_rot4.rotateY(a,e)},rotateZ:function(e){lib_matrix_rot4.rotateZ(a,e)},drawPhysics:false,set_physics:function(e){c.drawPhysics=e},set_position:function(e){lib_matrix_mv.set_position(a,e)},drawResources:function(){if(d){d.draw()}Shaders.set_matriceObjet(a);b.maillage.drawVBO();b.maillage.bindVBOIndices()},drawInstance:function(e){Shaders.set_position(e);b.maillage.drawVBOIndices_opt()}};return c}}})();var Cube=(function(){return{instance:function(d){d.l=d.l||1;d.centre=d.centre||[0,0,0];var b=d.l/2,e=d.centre;return Objet.instance({texture:d.texture,maillage:Maillage.instance({vertices:[-b+e[0],-b+e[1],-b+e[2],0,0,-b+e[0],b+e[1],-b+e[2],1,0,b+e[0],b+e[1],-b+e[2],1,1,b+e[0],-b+e[1],-b+e[2],0,1,-b+e[0],-b+e[1],b+e[2],0,0,-b+e[0],b+e[1],b+e[2],1,0,b+e[0],b+e[1],b+e[2],1,1,b+e[0],-b+e[1],b+e[2],0,1],indices:[0,1,2,0,2,3,1,5,6,1,6,2,3,2,6,3,6,7,0,4,7,0,7,3,0,1,5,0,5,4,4,5,6,4,6,7]})})}}})();var Sphere=(function(){return{instance:function(m){var a=m.centre||[0,0,0],i=m.rayon||1,e=m.bandes||16,k=m.couronnes||16,g=[],l=[];var h,j,d,f;for(h=0;h<=k;h++){f=((h/k)-0.5)*Math.PI;for(j=0;j<=e;j++){d=(j/e)*2*Math.PI;g.push(a[0]+Math.cos(d)*Math.cos(f)*i,a[1]+Math.sin(d)*Math.cos(f)*i,a[2]+Math.sin(f)*i);if(h!==0){if(h!==k){l.push(h*(e+1)+j,h*(e+1)+j-1,(h-1)*(e+1)+j)}if(h!==1){l.push(h*(e+1)+j-1,(h-1)*(e+1)+j,(h-1)*(e+1)+j-1)}}}if(h===0||h===k){continue}}return Objet.instance({texture:m.texture,maillage:Maillage.instance({vertices:g,indices:l})})}}})();var Grid=(function(){return{instance:function(b){var a,g,d=0;var c=[],f=[];for(a=0;a<=b.x;a++){for(g=0;g<=b.y;g++){c.push(a/b.x,g/b.y);if(a!==0&&g!==0){f.push(d,d-1,d-1-(b.y+1),d,d-1-(b.y+1),d-(b.y+1))}d++}}console.log(c.length,f.length);var e=Objet.instance({maillage:Maillage.instance({vertices:c,indices:f,int32Indices:true})});return e}}})();var VUE;var Vue=(function(){return{instance:function(b){b.camera=b.camera||[0,0,0];b.theta=b.theta||0;b.phi=b.phi||0;b.angle=b.angle||45;b.zMin=b.zMin||1;b.zMax=b.zMax||10;b.a=CV.width/CV.height;var d=lib_matrix4.get_I4(),a;var c=function(g){a=(b.ortho)?lib_matrix_projection.getOrtho(b.largeur,b.a,b.zMin,b.zMax):lib_matrix_projection.get(b.angle,g,b.zMin,b.zMax);if(RAY){RAY.set(a,CV.width,CV.height)}};c(b.a);var f=function(){lib_matrix4.set_I4(d);lib_matrix_rot4.rotateZ(d,b.theta);lib_matrix_rot4.rotateX(d,b.phi);lib_matrix_mv.translateRot(d,b.camera)};var e={draw:function(){Shaders.set_vue(d,b.camera)},drawHeightMapSurface:function(){Shaders.set_matriceVue_heightMapSurface(d);Shaders.set_matriceProjection_heightMapSurface(a)},drawIslandHeightMapSurface:function(){Shaders.set_matriceVue_islandHeightMapSurface(d);Shaders.set_matriceProjection_islandHeightMapSurface(a)},draw_water:function(){Shaders.set_matrices_water(a,d);Shaders.set_camera_water(b.camera)},drawPhysics:function(){},plein_ecran:function(){var g=function(h){CV.width=window.innerWidth;CV.height=window.innerHeight;c(CV.width/CV.height);Shaders.set_defaultShader();Shaders.set_matriceProjection(a);Shaders.unset_defaultShader()};window.addEventListener("resize",g,true);g()},set_angles:function(h,g){b.theta=g,b.phi=h;f()},translateXVue:function(g){b.camera[0]+=g*Math.cos(b.theta);b.camera[1]-=g*Math.sin(b.theta);f()},translateYVue:function(g){b.camera[2]+=g;f()},translateZVue:function(g){b.camera[1]+=g*Math.cos(b.theta);b.camera[0]+=g*Math.sin(b.theta);f()},get_projectionMatrix:function(){return a},get_vueMatrix:function(){return d},get_cameraPosition:function(){return b.camera},distanceToCamera:function(g){return lib_vector.distanceMinus(b.camera,g)},copy_cameraXY:function(g){g[12]=-b.camera[0],g[13]=-b.camera[1]}};f();Shaders.set_matriceProjection(a);VUE=e;return e}}})();var RAY=false;var Navigation=(function(){return{instance:function(k){var q=SETTINGS.navigation.mouse_sensibility_x,p=SETTINGS.navigation.mouse_sensibility_y,a=SETTINGS.navigation.keyboard_sensibility,h=SETTINGS.navigation.wheel_sensibility,x=SETTINGS.navigation.mouse_amortization,l=SETTINGS.camera.theta0,d=SETTINGS.camera.phi0,f=0,e=0;RAY=Rayon.instance({});RAY.set(k.vue.get_projectionMatrix(),CV.width,CV.height);var m=[],r=[],c=false,g=0,o=0;var i=function(z,y){window.addEventListener(z,y,false);r.push({type:z,handler:y})};var v=function(y){c=true;g=y.pageX;o=y.pageY};var t=function(y){c=false};var b=function(y){RAY.lance(y.pageX,y.pageY,k.vue.get_vueMatrix(),k.vue.get_cameraPosition());if(!c){return false}f=(y.pageX-g)*q,e=(y.pageY-o)*p;d+=f;l+=e;k.vue.set_angles(l,d);g=y.pageX;o=y.pageY};var w=function(y){var z=Math.max(-1,Math.min(1,(y.wheelDelta||-y.detail)));k.vue.translateYVue(h*z);return false};var s=function(y){y.preventDefault();if(m.indexOf(y.keyCode)!=-1){return false}m.push(y.keyCode);return false};var n=function(z){var y=m.indexOf(z.keyCode);if(y!=-1){m.splice(y,1)}z.preventDefault();return false};var u=function(y){switch(y){case 37:k.vue.translateXVue(a);break;case 39:k.vue.translateXVue(-a);break;case 38:k.vue.translateZVue(-a);break;case 40:k.vue.translateZVue(a);break}};var j={drawPhysics:function(){m.map(u);if(c){return false}f*=x;e*=x;d+=f;l+=e;k.vue.set_angles(l,d);return true},set:function(){i("mousedown",v);i("mouseup",t);i("mousemove",b);i("keyup",n);i("keydown",s);i("mousewheel",w);i("DOMMouseScroll",w)},unset:function(){r.map(function(y){window.removeEventListener(y.type,y.handler,false)});r=[]}};return j}}})();var Boite=(function(){return{instance:function(k){var e=lib_intersect.plucker_boite(k.C,k.dim);var c,j=[],a=[];k.nodes.map(function(i){if(lib_intersect.intersect_boite_sphere_permissif(k.C,k.dim,i.position,i.scale)){j.push(i)}});var b=(j.length<k.maxNodes);if(!b){var h,g,f;var d=lib_vector.halfNew(k.dim);for(h=-0.5;h<=0.5;h++){for(g=-0.5;g<=0.5;g++){for(f=-0.5;f<=0.5;f++){a.push(Boite.instance({C:[k.C[0]+h*k.dim[0]/2,k.C[1]+g*k.dim[1]/2,k.C[2]+f*k.dim[2]/2],dim:d,nodes:j,maxNodes:k.maxNodes}))}}}}return{is_feuille:function(){return b},intersect:function(l,q,s){if(!lib_intersect.intersect_ray_boite(l,e)){return false}var t=1000000000000,o=false;if(b){var p,m=false,n,r;for(p=0;p<j.length;p++){n=j[p];if(n.weight<WEIGHTNODEMIN-WEIGHTALPHATOL){continue}if(lib_intersect.intersect_ray_sphere(q,s,n.position,n.scale)){r=lib_vector.distance(n.position,q);if(r<t){t=r;if(!m){m={}}m.d=t;m.node=n;m.picked=true}}}o=m}else{for(var p=0;p<8;p++){m=a[p].intersect(l,q,s);if(m){if(m.d<t){t=m.d;o=m}}}}if(o){return o}return false}}}}})();var Octree=(function(){return{instance:function(a){a.AABB.centre=[(a.AABB.xMax+a.AABB.xMin)/2,(a.AABB.yMax+a.AABB.yMin)/2,(a.AABB.zMax+a.AABB.zMin)/2];a.AABB.dim=[a.AABB.xMax-a.AABB.xMin,a.AABB.yMax-a.AABB.yMin,a.AABB.zMax-a.AABB.zMin];var b=Boite.instance({C:a.AABB.centre,dim:a.AABB.dim,nodes:a.nodes,maxNodes:32});return{intersect:function(d,c){return b.intersect(lib_intersect.plucker_axe(d,c),d,c)}}}}})();var Rayon=(function(){var c,h,b=[0,0,0],d,a,g,f,e=[0,0,0];return{instance:function(i){return{set:function(l,j,k){c=l[0];h=l[5];d=(-1/c)*(2/j);a=1/c;g=(1/h)*(2/k);f=-1/h},lance:function(k,m,l,j){b[0]=(d*k+a);b[1]=(g*m+f);b[2]=1;lib_vector.normalize(b);lib_matrix_mv.do_inv_rot(l,b);e[0]=-j[0];e[1]=-j[1];e[2]=-j[2];SCENE.pick(e,b,k,m)}}}}})();var Gauss=(function(){var a={get_gaussCanvas:function(d){var f=document.createElement("canvas");f.width=d,f.height=d;var p=f.getContext("2d");var o=(d-1)/2,g=(d-1)/2;var b=p.createImageData(d,d);var k,h,e,c,m,l;var j=1/3;for(k=0;k<d;k++){m=2*(k-o)/(d-1);for(h=0;h<d;h++){l=2*(h-g)/(d-1);e=4*(k+h*d);c=Math.exp(-(m*m+l*l)/j);b.data[e]=Math.round(c*255);b.data[e+3]=255}}p.putImageData(b,0,0);return f},get_gaussTexture:function(e,f,c){var b=a.get_gaussCanvas(f);var d=e.createTexture();e.bindTexture(e.TEXTURE_2D,d);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,(c)?e.FLOAT:e.UNSIGNED_BYTE,b);return d}};return a})();var Heightmap=(function(){var a={heightMap:SETTINGS.debug.LsystemHeightMap,normalMap:SETTINGS.debug.LsystemNormalMap};var c=false,b;var f,h,e=VBO_indices;var d,g;return{init:function(j){b=j;var i=SETTINGS.Lsystems.heightMapGaussPatchSizePx;c=true;f=Gauss.get_gaussTexture(b,i,true);h=VBO.instance({tableau_js:[-0.5,-0.5,-0.5,0.5,0.5,0.5,0.5,-0.5]});e=VBO_indices.instance({tableau_js:[0,1,2,0,2,3]});d=b.createFramebuffer(),g=b.createFramebuffer()},instance:function(o){if(!c){console.log("Heightmap must be initialized with Heightmap.init before use. Abort");return false}o.size=o.size||1024,o.margin=o.margin||1;var B=o.nUV||SETTINGS.Lsystems.textureTileInWidth;var z=SETTINGS.Lsystems.heightMapPatchSizePx;var k=SETTINGS.Lsystems.heightMapPatchAlphaRandom,j=SETTINGS.Lsystems.heightMapPatchAlphaMin;var D=b.createTexture(),y=b.createTexture();b.bindTexture(b.TEXTURE_2D,D);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,o.size,o.size,0,b.RGBA,b.FLOAT,null);b.bindTexture(b.TEXTURE_2D,null);b.bindFramebuffer(b.FRAMEBUFFER,g);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,D,0);b.bindTexture(b.TEXTURE_2D,y);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.LINEAR_MIPMAP_LINEAR);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,o.size,o.size,0,b.RGBA,b.FLOAT,null);b.bindTexture(b.TEXTURE_2D,null);b.bindFramebuffer(b.FRAMEBUFFER,d);b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,y,0);var l=o.AABB.xMax-o.AABB.xMin,p=o.AABB.yMax-o.AABB.yMin,x=(o.AABB.xMax+o.AABB.xMin)/2,w=(o.AABB.yMax+o.AABB.yMin)/2;var E=l-2*o.margin,m=p-2*o.margin;var i=E/l,t=m/p;if(a.heightMap){console.log("Heightmap : Compute heightmap for "+l+" X "+p+" area size")}var z=[z*1/(l),z*1/(p)];var q=[0,0],s=[0,0];var r=[l+2*o.margin,p+2*o.margin],v=[-l/2-o.margin,-p/2-o.margin];var C=B;var A=C*p/l;var u=function(G){if(G.generation>SETTINGS.Lsystems.heightMapPatchMaxGen){return}q[0]=G.scale*z[0],q[1]=G.scale*z[1];s[0]=2*(((G.position[0]-o.centre[0])*i)/l),s[1]=2*(((G.position[1]-o.centre[1])*t)/p);var F=j+Math.random()*k;F*=G.scale;Shaders.set_node_heightMap(q,s,F);e.draw_Elements()};var n={get_normalTexture:function(){return y},compute:function(){Shaders.set_heightMap_shaders();if(!a.heightMap){b.bindFramebuffer(b.FRAMEBUFFER,g)}if(a.heightMap){SCENE.stop()}b.clearColor(0,0,0,1);b.disable(b.DEPTH_TEST);b.depthMask(false);b.blendFunc(b.SRC_ALPHA,b.ONE);b.viewport(0,0,o.size,o.size);b.clear(b.COLOR_BUFFER_BIT);h.draw_heightMap();e.bind();b.bindTexture(b.TEXTURE_2D,f);o.nodes.map(u);b.flush();Shaders.unset_heightMap_shaders();if(a.heightMap){return false}if(o.erodeTexturesSet&&!SETTINGS.debug.noErosionLsystems){D=o.erodeTexturesSet.erode(D,o.size,false);if(!D){return false}}b.bindFramebuffer(b.FRAMEBUFFER,(a.normalMap)?null:d);if(a.normalMap){SCENE.stop()}Shaders.set_normals_shaders();Shaders.set_whHSize(o.size,o.size,o.hMax,l,p);b.clearColor(0,0,0,0);b.clear(b.COLOR_BUFFER_BIT);b.bindTexture(b.TEXTURE_2D,D);h.draw_normalMap();e.draw();Shaders.unset_normals_shaders();b.enable(b.DEPTH_TEST);b.depthMask(true);b.blendFunc(b.SRC_ALPHA,b.ONE_MINUS_SRC_ALPHA);b.bindFramebuffer(b.FRAMEBUFFER,null);b.bindTexture(b.TEXTURE_2D,y);b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)},draw:function(){Shaders.set_scaleUV_heightMapSurface(C,A);b.bindTexture(b.TEXTURE_2D,y);Shaders.set_dim_heightMapSurface(r,v)},moveNodesAbove:function(){if(a.heightMap||a.normalMap||!D){return}var F=new Uint8Array(o.size*o.size*4);b.bindFramebuffer(b.FRAMEBUFFER,null);Shaders.set_textureRead_shaders();b.viewport(0,0,o.size,o.size);b.clearColor(0,0,0,0);b.clear(b.COLOR_BUFFER_BIT);b.disable(b.DEPTH_TEST);b.bindTexture(b.TEXTURE_2D,D);h.draw_textureRead();e.draw();b.flush();b.readPixels(0,0,o.size,o.size,b.RGBA,b.UNSIGNED_BYTE,F);Shaders.unset_textureRead_shaders();b.enable(b.DEPTH_TEST);var I=0,G=0;var H=function(N){var J=(o.margin+N.position[0]-o.AABB.xMin)/(l+2*o.margin),P=(o.margin+N.position[1]-o.AABB.yMin)/(p+2*o.margin);var O=Math.round(J*o.size),M=Math.round(P*o.size);var K=O+o.size*M;var L=o.hMax*(F[4*K]/255);I=Math.max(L,I),G=Math.min(L,G);N.position[2]+=L};o.nodes.map(H);o.AABB.zMax+=I,o.AABB.zMin+=G;b.clearColor(1,1,1,1)}};n.compute();return n}}})();var HeightmapSurface=(function(){return{instance:function(a){var f=Heightmap.instance(a);var c=a.gl;var b=Texture.instance({url:a.textureColorURL||SETTINGS.Lsystems.textureColorURL});var e=Texture.instance({url:a.textureNormalsURL||SETTINGS.Lsystems.textureNormalsURL});var d=lib_matrix4.get_I4();lib_matrix_mv.set_position(d,a.centre);var g=RiverSystem.instance({heightMapTexture:f.get_normalTexture(),hMax:a.hMax||SETTINGS.Lsystems.hMax,sizePx:SETTINGS.Lsystems.heightmapSizePx,width:a.AABB.xMax-a.AABB.xMin+2*a.margin,height:a.AABB.yMax-a.AABB.yMin+2*a.margin,rain:0.0001,waterHMax:0.7});f.drawSurface=function(){VUE.drawHeightMapSurface();Shaders.set_hMax_heightMapSurface(a.hMax);c.activeTexture(c.TEXTURE1);f.draw();c.activeTexture(c.TEXTURE2);e.draw();c.activeTexture(c.TEXTURE4);g.draw();c.activeTexture(c.TEXTURE0);b.draw();var h=VUE.distanceToCamera(a.centre);LodGrids.drawAsHeightMapSurface(d,h);Shaders.unset_heightMapSurface_shaders()};f.drawPhysics=function(h){if(VUE.distanceToCamera(a.centre)<SETTINGS.Lsystems.riversRefreshDistance){g.compute(h)}};return f}}})();var Lsystem=(function(){var b=SETTINGS.Lsystems.scaleAdjust,a=SETTINGS.Lsystems.scaleBranch,d=SETTINGS.Lsystems.angle;function c(h,e,i,f,g){NNODES++;g.xMax=Math.max(g.xMax,e[0]+i),g.xMin=Math.min(g.xMin,e[0]+i),g.yMax=Math.max(g.yMax,e[1]+i),g.yMin=Math.min(g.yMin,e[1]+i),g.zMax=Math.max(g.zMax,e[2]+i),g.zMin=Math.min(g.zMin,e[2]+i);return{scale:i,children:[],generation:h,position:e,highlight:0,label:f,imageAvailable:true,textureLoaded:false,imageBusy:false,image:false,texture:false,weight:0,alpha:1}}return{instance:function(o){var e=[];var f=o.nGenerations||10;var p=o.offset;var h={xMax:-1000000000000,xMin:1000000000000,yMax:-1000000000000,yMin:1000000000000,zMax:-1000000000000,zMin:1000000000000};var m=c(0,o.centre||[0,0,0],1,o.list[p],h);e.push(m);function s(){e.map(function(u){if(u.children.length){return}var v=u.generation*d;var A=Math.cos(v),C=Math.sin(v);var t=u.generation+1,E=u.scale*b;p+=o.gap;if(p>o.list.length){return}var G=u.position[0]+E*a*C,F=u.position[1]+E*a*A,D=u.position[2];var B=c(u.generation+1,[G,F,D],E,o.list[p],h);e.push(B);p+=o.gap;if(p>o.list.length){return}G=u.position[0]-E*a*C,F=u.position[1]-E*a*A,D=u.position[2];var w=c(u.generation+1,[G,F,D],E,o.list[p],h);u.children=[e.length,e.length+1];e.push(w)})}var q;for(q=1;q<f;q++){s()}var k=HeightmapSurface.instance({AABB:h,size:SETTINGS.Lsystems.heightmapSizePx,margin:SETTINGS.Lsystems.heightmapMargin,gl:GL,nodes:e,hMax:SETTINGS.Lsystems.hMax,centre:o.centre,erodeTexturesSet:ERODETEXTURESSET});k.moveNodesAbove();var j=false;var i=false;var g=-1;var n=function(t){NNODESDISPLAYED++;if(NIMAGEREQS<MAXIMAGEREQS&&!t.imageBusy&&t.imageAvailable&&!t.textureLoaded&&t.weight>WEIGHTNODETEXTUREDMIN){t.imageBusy=true,t.image=new Image();t.image.onload=function(u){t.imageAvailable=true;t.imageBusy=false;t.texture=GL.createTexture();GL.bindTexture(GL.TEXTURE_2D,t.texture);GL.texImage2D(GL.TEXTURE_2D,0,GL.RGBA,GL.RGBA,GL.UNSIGNED_BYTE,t.image);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_WRAP_S,GL.CLAMP_TO_EDGE);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_WRAP_T,GL.CLAMP_TO_EDGE);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_MAG_FILTER,GL.LINEAR);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_MIN_FILTER,GL.NEAREST_MIPMAP_LINEAR);GL.generateMipmap(GL.TEXTURE_2D);GL.bindTexture(GL.TEXTURE_2D,null);t.textureLoaded=true;t.image=null;NIMAGEREQS--};t.image.onerror=function(u){t.imageAvailable=false;t.imageBusy=false;NIMAGEREQS--};t.image.src="php/favicons/favicons/"+t.label.replace(/\./g,"_")+".png";console.log("get ",t.image.src);NIMAGEREQS++}if(t.textureLoaded){NNODESTEXTUREDDISPLAYED++;GL.bindTexture(GL.TEXTURE_2D,t.texture);i=false}else{if(!i){GL.bindTexture(GL.TEXTURE_2D,Texture.get_default());i=true}}if(t.generation<CURRENTGEN){Shaders.set_hightLight(t.highlight);if(t.alpha!==g){Shaders.set_alpha(t.alpha);g=t.alpha}LodSpheres.draw(t)}};var r=function(u,t){return t.weight-u.weight};var l={get_sizeX:function(){return h.xMax-h.xMin},get_sizeY:function(){return h.yMax-h.yMin},get_sizeZ:function(){return h.zMax-h.zMin},get_nodes:function(){return e},get_AABB:function(){return h},computeOctree:function(){j=Octree.instance({AABB:h,nodes:e})},draw:function(){k.drawSurface();if(SETTINGS.debug.hideSpheres){return}Shaders.set_defaultShader();LodSpheres.reset();i=false;g=-1;for(var t=0;t<e.length;t++){if(e[t].weight<WEIGHTNODEMIN-WEIGHTALPHATOL){break}if(e[t].weight<WEIGHTNODEMIN){e[t].alpha=1-(WEIGHTNODEMIN-e[t].weight)/WEIGHTALPHATOL}else{e[t].alpha=1}n(e[t])}Shaders.unset_defaultShader()},drawPhysics:function(t){k.drawPhysics(t)},pick:function(w,t){if(!j){return false}var v=j.intersect(w,t);if(v){v.lsystem=l}return v},sort:function(t){e.map(function(u){u.weight=-(1/(0+u.scale))*lib_vector.distanceMinus(u.position,t);if(u.weight<WEIGHTNODETEXTUREDMIN-WEIGHTGCTOL){if(u.imageAvailable&&u.textureLoaded&&!u.imageBusy){u.imageAvailable=true,u.textureLoaded=false;GL.deleteTexture(u.texture);u.texture=null}}});e.sort(r)}};return l}}})();var SuperIsland=(function(){var b={islandHeightMap:SETTINGS.debug.islandHeightMap,islandNormalMap:SETTINGS.debug.islandNormalMap};var a=SETTINGS.physics.dt/1000;return{instance:function(l){l.centre=l.centre||[0,0,0],l.LsystemRadius=l.LsystemRadius||10,l.size=l.size||100,l.sizePx=l.sizePx||SETTINGS.islands.sizePx,l.patchGaussSizePx=l.patchGaussSizePx||SETTINGS.islands.patchGaussSizePx,l.patchSizeAvgPx=l.patchSizeAvgPx||SETTINGS.islands.patchSizeAvgPx,l.patchSizeRandomPx=l.patchSizeRandomPx||SETTINGS.islands.patchSizeRandomPx,l.patchAlphaAvg=l.patchAlphaAvg||SETTINGS.islands.patchAlphaAvg,l.patchAlphaRandom=l.patchAlphaRandom||SETTINGS.islands.patchAlphaRandom,l.hMax=l.hMax||SETTINGS.islands.hMax,l.nPatch=l.nPatch||SETTINGS.islands.nPatch,l.scaleUV=l.scaleUV||SETTINGS.islands.textureTileInWidth;var t=lib_matrix4.get_I4();var j=GL;var s=[];var o=Texture.instance({url:l.textureColorURL||SETTINGS.islands.textureColorURL});var d=Texture.instance({url:l.textureNormalsURL||SETTINGS.islands.textureNormalsURL});var q=[l.size,l.size];var g=[l.centre[0]-l.size/2,l.centre[1]-l.size/2];var v=[],n=[],p=[];l.Lsystems.map(function(D){var C,H,E,N,M,J=true,A=0,L,I;var B,K;var G=SETTINGS.islands.centerExclusionRadius*SETTINGS.islands.centerExclusionRadius;while(J&&A<100){H=l.LsystemRadiusMargin+Math.random()*(l.size-2*l.LsystemRadiusMargin),E=l.LsystemRadiusMargin+Math.random()*(l.size-2*l.LsystemRadiusMargin);B=H-l.size/2,K=E-l.size/2;if(B*B+K*K<G){A++;continue}J=false;for(C=0;C<v.length;C++){N=H-v[C][0],M=E-v[C][1];J=N*N+M*M<l.LsystemRadius*l.LsystemRadius;if(J){break}}A++}if(A>=100){console.log("SuperIsland warning : to many collisions")}v.push([H,E]);var z=[l.centre[0]+H-l.size/2,l.centre[1]+E-l.size/2,l.centre[2]-SETTINGS.islands.vtOffset];D.centre=z;var F=Lsystem.instance(D);if(STOP){return false}s.push(F);LSYSTEMS.push(F);n.push([(F.get_sizeX())/l.size,(F.get_sizeY())/l.size]);L=(H-0*F.get_sizeX()/2)/l.size,I=(E-0*F.get_sizeY()/2)/l.size;p.push([L,I])});if(STOP||SETTINGS.debug.LsystemHeightMap||SETTINGS.debug.LsystemNormalMap){return}var u=Gauss.get_gaussTexture(j,l.patchGaussSizePx,true);var e=j.createTexture();j.bindTexture(j.TEXTURE_2D,e);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MIN_FILTER,j.LINEAR);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MAG_FILTER,j.LINEAR);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_S,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_T,j.CLAMP_TO_EDGE);j.texImage2D(j.TEXTURE_2D,0,j.RGBA,l.sizePx,l.sizePx,0,j.RGBA,j.FLOAT,null);j.bindTexture(j.TEXTURE_2D,null);var h=j.createFramebuffer();j.bindFramebuffer(j.FRAMEBUFFER,h);j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,j.TEXTURE_2D,e,0);j.bindFramebuffer(j.FRAMEBUFFER,null);var c=j.createTexture();j.bindTexture(j.TEXTURE_2D,c);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MIN_FILTER,j.LINEAR);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MAG_FILTER,j.LINEAR);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_S,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_T,j.CLAMP_TO_EDGE);j.texImage2D(j.TEXTURE_2D,0,j.RGBA,l.sizePx,l.sizePx,0,j.RGBA,j.FLOAT,null);j.bindTexture(j.TEXTURE_2D,null);var r=j.createFramebuffer();j.bindFramebuffer(j.FRAMEBUFFER,r);j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,j.TEXTURE_2D,c,0);j.bindFramebuffer(j.FRAMEBUFFER,null);var f=VBO.instance({tableau_js:[-0.5,-0.5,-0.5,0.5,0.5,0.5,0.5,-0.5]});var m=VBO_indices.instance({tableau_js:[0,1,2,0,2,3]});var i=function(y,x){Shaders.set_heightMapSurface_shaders();Shaders.set_island_heightMapSurface(l.hMax,n[x],p[x]);if(x===0){Shaders.set_fog_heightMapSurface(SETTINGS.fog.dMin,SETTINGS.fog.dMax,SETTINGS.fog.color)}y.draw()};var w=false;var k={compute:function(){Shaders.set_heightMap_shaders();if(!b.islandHeightMap){j.bindFramebuffer(j.FRAMEBUFFER,h)}if(b.islandHeightMap){CV.width=l.sizePx,CV.height=l.sizePx;document.body.style.backgroundColor="white";SCENE.stop()}j.clearColor(0,0,0,1);j.disable(j.DEPTH_TEST);j.blendFunc(j.SRC_ALPHA,j.ONE);j.viewport(0,0,l.sizePx,l.sizePx);j.clear(j.COLOR_BUFFER_BIT);f.draw_heightMap();m.bind();j.bindTexture(j.TEXTURE_2D,u);var D,C,A,H,G,z,E,I=[0,0],F,B;for(A=0;A<l.nPatch;A++){H=Math.floor(Math.random()*l.Lsystems.length);G=H;while(G===H){G=Math.floor(Math.random()*l.Lsystems.length)}B=SETTINGS.islands.patchExclusionRadius/lib_vector.distanceDim2(v[H],v[G]);z=B+((1-2*B)*Math.random());D=z*v[H][0]+(1-z)*v[G][0],C=z*v[H][1]+(1-z)*v[G][1];D+=SETTINGS.islands.patchDistanceMaxRandom*Math.random(),C+=SETTINGS.islands.patchDistanceMaxRandom*Math.random(),I[0]=(2*D/l.size)-1,I[1]=(2*C/l.size)-1;E=(l.patchSizeAvgPx+(Math.random()-0.5)*2*l.patchSizeRandomPx)/l.sizePx;F=l.patchAlphaAvg+(Math.random()-0.5)*2*l.patchAlphaRandom;Shaders.set_node_heightMap([E,E],I,F);m.draw_Elements()}j.bindTexture(j.TEXTURE_2D,null);j.flush();Shaders.unset_heightMap_shaders();if(b.islandHeightMap){return}if(l.mountainTexturesSet){e=l.mountainTexturesSet.erode(e,l.sizePx,true);if(!e){return false}}j.bindFramebuffer(j.FRAMEBUFFER,(b.islandNormalMap)?null:r);if(b.islandNormalMap){CV.width=l.sizePx,CV.height=l.sizePx;document.body.style.backgroundColor="white";SCENE.stop()}Shaders.set_normals_shaders();Shaders.set_whHSize(l.sizePx,l.sizePx,l.hMax,l.size,l.size);j.clearColor(0,0,0,0);j.clear(j.COLOR_BUFFER_BIT);j.activeTexture(j.TEXTURE0);j.bindTexture(j.TEXTURE_2D,e);f.draw_normalMap();m.draw();Shaders.unset_normals_shaders();j.enable(j.DEPTH_TEST);j.blendFunc(j.SRC_ALPHA,j.ONE_MINUS_SRC_ALPHA);j.bindFramebuffer(j.FRAMEBUFFER,null);j.bindTexture(j.TEXTURE_2D,c);j.generateMipmap(j.TEXTURE_2D);j.bindTexture(j.TEXTURE_2D,null);w=RiverSystem.instance({heightMapTexture:c,hMax:l.hMax,sizePx:l.sizePx,width:l.size,height:l.size,rain:0.00001,gravity:4,waterHMax:3})},draw:function(){var x=VUE.distanceToCamera(l.centre);if(x>SETTINGS.islands.hideDistance){return false}Shaders.set_islandHeightMapSurface_shaders();Shaders.set_fog_islandHeightMapSurface(SETTINGS.fog.dMin,SETTINGS.fog.dMax,SETTINGS.fog.color);VUE.drawIslandHeightMapSurface();Shaders.set_hMax_islandHeightMapSurface(l.hMax);Shaders.set_scaleUV_islandHeightMapSurface(l.scaleUV,l.scaleUV);Shaders.set_dim_islandHeightMapSurface(q,g);j.activeTexture(j.TEXTURE1);j.bindTexture(j.TEXTURE_2D,c);j.activeTexture(j.TEXTURE2);d.draw();j.activeTexture(j.TEXTURE3);if(w){w.draw()}j.activeTexture(j.TEXTURE0);o.draw();LodGrids.drawAsIslandHeightMapSurface(t,x);Shaders.unset_islandHeightMapSurface_shaders();j.activeTexture(j.TEXTURE3);j.bindTexture(j.TEXTURE_2D,c);s.map(i);return true},drawPhysics:function(){s.map(function(x){x.drawPhysics(a)});if(VUE.distanceToCamera(l.centre)<SETTINGS.islands.riversRefreshDistance){w.compute(a)}},moveNodesAbove:function(){var x=new Uint8Array(l.sizePx*l.sizePx*4);j.bindFramebuffer(j.FRAMEBUFFER,null);Shaders.set_textureRead_shaders();j.viewport(0,0,l.sizePx,l.sizePx);j.clearColor(0,0,0,0);j.clear(j.COLOR_BUFFER_BIT);j.disable(j.DEPTH_TEST);j.bindTexture(j.TEXTURE_2D,e);f.draw_textureRead();m.draw();j.flush();j.readPixels(0,0,l.sizePx,l.sizePx,j.RGBA,j.UNSIGNED_BYTE,x);Shaders.unset_textureRead_shaders();j.enable(j.DEPTH_TEST);var y=function(B){var z=B.get_nodes();var E=0,A=0;var D=function(H,G){var F=H+l.sizePx*G;return x[4*F]};z.map(function(I){var O=0.5+(I.position[0]-l.centre[0])/l.size,M=0.5+(I.position[1]-l.centre[1])/l.size;if(O<0||M<0||O>1||M>1){return}var F=O*l.sizePx,J=M*l.sizePx;var H=Math.floor(F),N=Math.floor(J),G=Math.ceil(F),L=Math.ceil(J);var P=lib_maths.bilinear_interpolation(F,J,H,N,G,L,D(H,N),D(H,L),D(G,N),D(G,L));var K=l.hMax*P/255;I.position[2]+=K+SETTINGS.sphere.zOffset;E=Math.max(K,E),A=Math.min(K,A)});var C=B.get_AABB();C.zMax+=E+SETTINGS.sphere.zOffset,C.zMin+=A+SETTINGS.sphere.zOffset;B.computeOctree()};s.map(y)}};k.compute();if(!b.islandHeightMap&&!b.islandNormalMap){k.moveNodesAbove()}return k}}})();var SurfaceLiquide=(function(){return{instance:function(j){j.centre=j.centre||SETTINGS.water.center;j.i=j.i||SETTINGS.water.refractionIndice;j.N=j.N||SETTINGS.water.gridSize;j.profondeur=j.profondeur||SETTINGS.water.depth;j.d=j.d||SETTINGS.water.dimension;j.lambda=j.lambda||8;j.couleur=j.couleur||SETTINGS.water.color;j.visibilite=j.visibilite||SETTINGS.water.visibility;j.lumiere=j.lumiere||SETTINGS.light.direction;var B=lib_matrix4.get_I4();lib_matrix_rot4.rotateX(B,-Math.PI/2);lib_matrix_mv.set_position(B,j.centre);var e=[],d=[],o,m;var G,D,q,n;for(m=0;m<j.N;m++){D=2*(m/j.N-0.5);n=(D>=0)?1:-1;D=Math.pow(Math.abs(D),3)*n;for(o=0;o<j.N;o++){G=2*(o/j.N-0.5);q=(G>=0)?1:-1;G=Math.pow(Math.abs(G),3)*q;e.push(j.d*0.5*G,j.d*0.5*D);if(o&&m){d.push(j.N*m+o,j.N*m+o-1,j.N*(m-1)+o-1,j.N*m+o,j.N*(m-1)+o-1,j.N*(m-1)+o)}}}var E=Maillage.instance({vertices:e,indices:d,int32Indices:true});var I=[],a=[],b=[];var C,l,y,h,r,F,p,u;var H=Math.PI/2;var v=Math.random()*2*Math.PI;for(C=0;C<6;C++){l=j.lambda/Math.pow(1.5,C);y=2*Math.PI/l;h=Math.random()*Math.PI*2;r=[Math.cos(h)*y,Math.sin(h)*y];I.push(r[0],r[1]);F=1.65*Math.sqrt(l);p=F*y;a.push(p);u=0.005*l;b.push(u)}var t=Texture.instance({url:j.URLciel}),s=Texture.instance({url:j.URLfond});var g=Objet.instance({maillage:E,matrix:B});var f=0;g.draw=function(){Shaders.set_water_shader();GL.clearColor(SETTINGS.light.skyColor[0],SETTINGS.light.skyColor[1],SETTINGS.light.skyColor[2],SETTINGS.light.skyColor[3]);VUE.draw_water();Shaders.set_fog_water(SETTINGS.fog.dMin,SETTINGS.fog.dMax,SETTINGS.fog.color);Shaders.set_time_water(f);VUE.copy_cameraXY(B);Shaders.set_matriceObjet_water(B);Shaders.set_vagues_water(b,I,a);Shaders.set_liquid_water(1/j.i,j.profondeur,j.couleur,j.visibilite,j.lumiere);GL.activeTexture(GL.TEXTURE1);s.draw();GL.activeTexture(GL.TEXTURE0);t.draw();E.draw_water();Shaders.unset_water_shader()};g.drawPhysics=function(){f+=SETTINGS.water.speed};return g}}})();var ErodeTexturesSet=(function(){var d,a=false;var b;var c=SETTINGS.debug.ErodeTexture;return{init:function(){a=true;d=Maillage.instance({vertices:[-0.5,-0.5,-0.5,0.5,0.5,0.5,0.5,-0.5],indices:[0,1,2,0,2,3]});b=GL.createFramebuffer()},instance:function(g){if(!a){console.log("Error : ErodeTexturesSet must be initialized before. Abort");return}var h=g.texturesURL.length,f=[],e=0;g.texturesURL.map(function(i){f.push(Texture.instance({url:i,onload:function(){e++;if(e===h&&g.onload){g.onload()}}}))});return{erode:function(n,j,m){var k=GL.createTexture();GL.bindTexture(GL.TEXTURE_2D,k);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_MIN_FILTER,GL.LINEAR);GL.texParameteri(GL.TEXTURE_2D,GL.TEXTURE_MAG_FILTER,GL.LINEAR);GL.texImage2D(GL.TEXTURE_2D,0,GL.RGBA,j,j,0,GL.RGBA,GL.FLOAT,null);GL.bindTexture(GL.TEXTURE_2D,null);GL.bindFramebuffer(GL.FRAMEBUFFER,b);GL.framebufferTexture2D(GL.FRAMEBUFFER,GL.COLOR_ATTACHMENT0,GL.TEXTURE_2D,k,0);if(c){GL.bindFramebuffer(GL.FRAMEBUFFER,null);SCENE.stop()}var l=Math.floor(Math.random()*h);Shaders.set_erode_shaders((m)?1:0);GL.clearColor(0,0,0,0);GL.clear(GL.COLOR_BUFFER_BIT);GL.activeTexture(GL.TEXTURE1);f[l].draw();GL.activeTexture(GL.TEXTURE0);GL.bindTexture(GL.TEXTURE_2D,n);d.drawErode();Shaders.unset_erode_shaders();return(c)?false:k}}}}})();var RiverSystem=(function(){var n=false,k=true,c=false,C="classes/water/images/blue.jpg",f,w,g,r,d,t,u,m,l,B,x,s,b,a,v,A,z,h,e,i,q,y,j,o,p;return{init:function(K){n=K;c=true;var G=function(P,N,Q){var O=n.createShader(N);n.shaderSource(O,P);n.compileShader(O);if(!n.getShaderParameter(O,n.COMPILE_STATUS)){alert(Q+" : "+n.getShaderInfoLog(O));return false}return O};var I=function(P,O,R){var Q=G(P,n.VERTEX_SHADER,R+" VERTEX_SHADER");var N=G(O,n.FRAGMENT_SHADER,R+" FRAGMENT_SHADER");shader_program=n.createProgram();n.attachShader(shader_program,Q);n.attachShader(shader_program,N);n.linkProgram(shader_program);return shader_program};var M="precision highp float;\n\nuniform sampler2D sampler;\nvarying vec2 vUV; \n\nvoid main(void) {\n    gl_FragColor=texture2D(sampler, vUV);\n} ",L="attribute vec2 position;\n\nvarying vec2 vUV;\n\nvoid main(void) {\n    vUV=0.5*position+vec2(0.5,0.5);\n    gl_Position=vec4(position,0.,1.);\n} \n \n";f=I(L,M,"RIVERSYSTEM COPY");u=n.getUniformLocation(f,"sampler"),r=n.getAttribLocation(f,"position");var D="/*\n* This shader implement shallow water equations\n* see http://en.wikipedia.org/wiki/Shallow_water_equations\n*\n* as a result it gives a floating point RGBA texture\n* R channel is used for water height\n* G,B,A channels are used for water speed\n*/\n\n\nprecision highp float;\n\nuniform sampler2D samplerWater, samplerTerrain;\nuniform float dx, dy, dt, rain, gravity, terrainHMax, waterHMax;\nuniform vec2 scaleXY;\n\nvarying vec2 vUV; \n\nvoid main(void) {\n    //get data at t from texture\n    vec4 waterData=texture2D(samplerWater, vUV);\n    float waterHeight=waterHMax*waterData.r;\n    vec3 waterSpeed=waterData.gba;\n\n    vec4 terrainData=texture2D(samplerTerrain, vUV);\n    float terrainHeight=terrainHMax*terrainData.r;\n    vec2 terrainNormal=0.5*(terrainData.gb-vec2(0.5,0.5))*scaleXY/terrainHMax;\n    \n    //compute wikipedia vars\n    float H=terrainHeight; //waterHeight; //total height\n    vec2 v=waterSpeed.xy;\n\n    //compute derivatives\n    vec2 dx2=vec2(dx,0.);\n    vec2 dy2=vec2(0.,dy);\n\n    vec4 DwDx=(-texture2D(samplerWater, vUV+dx2*2.)+8.*texture2D(samplerWater, vUV+dx2)-8.*texture2D(samplerWater, vUV-dx2)+texture2D(samplerWater, vUV-2.*dx2))/(12.*dx*scaleXY.x);\n\n    vec4 DwDy=(-texture2D(samplerWater, vUV+dy2*2.)+8.*texture2D(samplerWater, vUV+dy2)-8.*texture2D(samplerWater, vUV-dy2)+texture2D(samplerWater, vUV-2.*dy2))/(12.*dy*scaleXY.y);\n\n    //vec4 DwDy=(texture2D(samplerWater, vUV+dy2)-texture2D(samplerWater, vUV-dy2))/(12.*dy*scaleXY.y);\n\n\n\n    vec2 DhDxy=vec2(DwDx.r, DwDy.r)*waterHMax;\n    vec2 DvDx=DwDx.gb;\n    vec2 DvDy=DwDy.gb;\n    float DvDxy=DvDx.x+DvDy.y;\n\n    //apply shallow water equation\n    vec2 dv=-dt*((gravity*(DhDxy-terrainNormal.xy))+0.09*v);\n    float dh=-waterHeight*dt*DvDxy;\n    \n    //raining\n    dh+=(1.-smoothstep(0., 0.5, distance(vUV,vec2(0.5,0.5))))* rain;\n\n    //refresh vars\n    waterHeight+=dh;\n    waterSpeed.xy+=dv;\n\n    //absorption\n    waterHeight*=0.9+0.1*smoothstep(0.,0.001,terrainHeight);\n\n    //prevent explosion\n    waterHeight=clamp(waterHeight, -waterHMax, waterHMax);\n    //waterSpeed.xy=clamp(waterSpeed.xy, -vec2(1.,1.), vec2(1.,1.));\n\n    gl_FragColor=vec4(waterHeight/waterHMax,waterSpeed.xy, 1.);\n//    gl_FragColor=terrainData;\n\n}",E="/*\n* All computations are done into fragment shader\n*/\nattribute vec2 position;\n\nvarying vec2 vUV;\n\nvoid main(void) {\n    vUV=0.5*position+vec2(0.5,0.5);\n    gl_Position=vec4(position,0.,1.);\n} \n";w=I(E,D,"RIVERSYSTEM GPGPU");m=n.getUniformLocation(w,"dx"),l=n.getUniformLocation(w,"dy"),B=n.getUniformLocation(w,"scaleXY"),x=n.getUniformLocation(w,"dt"),s=n.getUniformLocation(w,"rain"),b=n.getUniformLocation(w,"gravity"),a=n.getUniformLocation(w,"terrainHMax"),v=n.getUniformLocation(w,"waterHMax"),A=n.getUniformLocation(w,"samplerWater"),z=n.getUniformLocation(w,"samplerTerrain");d=n.getAttribLocation(w,"position");n.useProgram(w);n.uniform1i(A,0);n.uniform1i(z,1);var H="precision highp float;\n\nuniform sampler2D samplerWater, samplerMaterial, samplerWaterPrevious;\nuniform float dx,dy;\n\nvarying vec2 vUV; \nconst float EDGE=0.1;\n\nvoid main(void) {\n    vec4 waterData=texture2D(samplerWater, vUV)\n                  +texture2D(samplerWater, vUV+vec2(dx,0.))\n                  +.5*texture2D(samplerWater, vUV+vec2(dx,dy))\n                  +texture2D(samplerWater, vUV+vec2(0.,dy))\n                  +.5*texture2D(samplerWater, vUV+vec2(-dx,dy))\n                  +texture2D(samplerWater, vUV+vec2(-dx,0.))\n                  +.5*texture2D(samplerWater, vUV+vec2(-dx,-dy))\n                  +texture2D(samplerWater, vUV+vec2(0.,-dy))\n                  +.5*texture2D(samplerWater, vUV+vec2(dx,-dy));\n\n\n    float waterHeight=waterData.r/7.;\n\n   // vec3 waterSpeed=waterData.gba;\n\n    vec4 waterColor=texture2D(samplerMaterial, vUV);\n    \n    //waterColor=vec4(1.,0.,0.,1.); //for debug only\n    \n    //vec4 color=vec4(waterHeight, 0., 0.,1.);\n    //vec4 color=vec4(waterSpeed.xy,0.,1.);\n\n    //vec4 color=vec4(waterData.gba, 1.);\n    //vec4 color=vec4(waterColor.rgb,min(smoothstep(0.15, 0.20, waterHeight)*(waterHeight*0.8+0.08), 0.5));\n    vec4 color=vec4(waterColor.rgb,step(EDGE, waterHeight)*(waterHeight));\n\n    //vec4 color=vec4(waterColor.rgb,0.5*smoothstep(0.05, 0.2, waterHeight));\n    //vec4 color=vec4(waterHeight, texture2D(samplerWater, vUV).r,0.,1.);\n\n    vec4 previousColor=texture2D(samplerWaterPrevious, vUV);\n    gl_FragColor=previousColor*0.95+0.05*color;\n} \n",F="attribute vec2 position;\n\nvarying vec2 vUV;\n\nvoid main(void) {\n    vUV=0.5*position+vec2(0.5,0.5);\n    gl_Position=vec4(position,0.,1.);\n} \n \n";g=I(F,H,"RIVERSYSTEM RENDERING");q=n.getUniformLocation(g,"dx"),y=n.getUniformLocation(g,"dy"),h=n.getUniformLocation(g,"samplerWater"),i=n.getUniformLocation(g,"samplerWaterPrevious"),e=n.getUniformLocation(g,"samplerMaterial");t=n.getAttribLocation(g,"position");n.useProgram(g);n.uniform1i(h,0);n.uniform1i(e,1);n.uniform1i(i,2);j=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,j);n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW);o=n.createBuffer();n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,o);n.bufferData(n.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),n.STATIC_DRAW);p=n.createTexture();var J=new Image();J.onload=function(){n.bindTexture(n.TEXTURE_2D,p);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,J);n.bindTexture(n.TEXTURE_2D,null)};J.src=C},instance:function(L){if(!c){console.log("Error : RiverSystem must be initialized first with RiverSystem.init(gl context)");return false}L.simuSizePx=L.simuSizePx||L.sizePx,L.rain=L.rain||1e-7,L.nPass=L.nPass||2,L.gravity=L.gravity||0.9,L.waterHMax=L.waterHMax||5;var K=n.createTexture();n.bindTexture(n.TEXTURE_2D,K);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,L.simuSizePx,L.simuSizePx,0,n.RGBA,n.FLOAT,null);n.bindTexture(n.TEXTURE_2D,null);var N=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,N);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,K,0);n.bindFramebuffer(n.FRAMEBUFFER,null);var F=n.createTexture();n.bindTexture(n.TEXTURE_2D,F);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,L.simuSizePx,L.simuSizePx,0,n.RGBA,n.FLOAT,null);n.bindTexture(n.TEXTURE_2D,null);var E=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,E);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,F,0);n.bindFramebuffer(n.FRAMEBUFFER,null);var J=n.createTexture();n.bindTexture(n.TEXTURE_2D,J);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,L.simuSizePx,L.simuSizePx,0,n.RGBA,n.FLOAT,null);n.bindTexture(n.TEXTURE_2D,null);var D=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,D);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,J,0);n.bindFramebuffer(n.FRAMEBUFFER,null);var O=0.5/L.simuSizePx;var M=O*L.height/L.width;var H=[L.width,L.height];var G=0;var I={draw:function(){n.bindTexture(n.TEXTURE_2D,J)},compute:function(Q){G+=Q;var R=0;if(G>1){G=0;R=L.rain}n.disable(n.BLEND);n.clearColor(0,0,0,0);n.depthMask(false);n.viewport(0,0,L.simuSizePx,L.simuSizePx);n.bindBuffer(n.ARRAY_BUFFER,j);n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,o);var P;for(P=0;P<L.nPass;P++){n.bindFramebuffer(n.FRAMEBUFFER,E);n.useProgram(f);n.enableVertexAttribArray(r);n.bindTexture(n.TEXTURE_2D,K);n.vertexAttribPointer(r,2,n.FLOAT,false,8,0);n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0);n.disableVertexAttribArray(r);n.bindFramebuffer(n.FRAMEBUFFER,N);n.useProgram(w);n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT);n.enableVertexAttribArray(d);if(!P){n.uniform1f(m,O);n.uniform1f(l,M);n.uniform2fv(B,H);n.uniform1f(x,Q/L.nPass);n.uniform1f(s,R);n.uniform1f(b,L.gravity);n.uniform1f(v,L.waterHMax);n.uniform1f(a,L.hMax)}else{if(P===1){n.uniform1f(s,0)}}n.activeTexture(n.TEXTURE1);n.bindTexture(n.TEXTURE_2D,L.heightMapTexture);n.activeTexture(n.TEXTURE0);n.bindTexture(n.TEXTURE_2D,F);n.vertexAttribPointer(d,2,n.FLOAT,false,8,0);n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0);n.disableVertexAttribArray(d)}n.bindFramebuffer(n.FRAMEBUFFER,D);n.useProgram(g);n.enableVertexAttribArray(t);n.uniform1f(q,O*2.1);n.uniform1f(y,M*2.1);n.activeTexture(n.TEXTURE2);n.bindTexture(n.TEXTURE_2D,J);n.activeTexture(n.TEXTURE1);n.bindTexture(n.TEXTURE_2D,p);n.activeTexture(n.TEXTURE0);n.bindTexture(n.TEXTURE_2D,K);n.vertexAttribPointer(t,2,n.FLOAT,false,8,0);n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0);n.disableVertexAttribArray(t);n.bindFramebuffer(n.FRAMEBUFFER,null);n.enable(n.BLEND);n.flush();n.depthMask(true);n.clearColor(1,1,1,1)}};return I}}})();var LodGrids=(function(){var b=false,a=[],c=0,d;return{init:function(){b=true;d=SETTINGS.grids.nLods;var f,e;for(f=1;f<=d;f++){e=Math.round(SETTINGS.grids.LOD0Size/Math.pow(2,(f-1)));a.push(Grid.instance({x:e,y:e}))}},drawAsHeightMapSurface:function(e,f){c=Math.round(f*d/SETTINGS.Lsystems.gridDistanceLodMin);c=Math.min(c,d-1);a[c].drawAsHeightMapSurface(e)},drawAsIslandHeightMapSurface:function(e,f){c=Math.round(f*d/SETTINGS.islands.gridDistanceLodMin);c=Math.min(c,d-1);a[c].drawAsIslandHeightMapSurface(e)}}})();var LodSpheres=(function(){var f=false;var b=[];var d=[];var a=0,e=-1,c;return{init:function(){f=true;c=SETTINGS.sphere.nLods;var j,h,g;for(j=1;j<=c;j++){h=SETTINGS.sphere.nBands/j,g=SETTINGS.sphere.nCrowns/j;b.push(Sphere.instance({centre:[0,0,0],rayon:1,bandes:h,couronnes:g}));d.push(SETTINGS.sphere.lodMinWeight+(SETTINGS.sphere.lodMaxWeight-SETTINGS.sphere.lodMinWeight)/SETTINGS.sphere.nLods*(SETTINGS.sphere.nLods-j+1))}},reset:function(){a=-1,e=-1},draw:function(g){if((a===-1||g.weight<d[a])&&a<c-1){a++;b[a].drawResources()}if(g.scale!==e){e=g.scale;Shaders.set_scale(e)}b[a].drawInstance(g.position)}}})();"use strict";var LABEL;var main=function(){LABEL=document.getElementById("label");Contexte.instance({canvas_id:"mon_canvas"})};